//! Autogenerated weights for lending
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-10-05, STEPS: `[5, ]`, REPEAT: 2, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 128

// Executed Command:
// ./target/release/composable
// benchmark
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=lending
// --extrinsic=*
// --steps=5
// --repeat=2
// --raw
// --output=./runtime/picasso/src/weights

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for lending.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> lending::WeightInfo for WeightInfo<T> {
	fn create_new_market() -> Weight {
		(102_294_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(11 as Weight))
	}
	fn deposit_collateral() -> Weight {
		(123_947_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn withdraw_collateral() -> Weight {
		(158_134_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(10 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn borrow() -> Weight {
		(243_908_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(17 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn repay_borrow() -> Weight {
		(75_822_000 as Weight).saturating_add(T::DbWeight::get().reads(7 as Weight))
	}
	fn now() -> Weight {
		(4_744_000 as Weight).saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	fn accrue_interest() -> Weight {
		(76_626_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn account_id() -> Weight {
		(3_126_000 as Weight)
	}
	fn available_funds() -> Weight {
		(16_450_000 as Weight).saturating_add(T::DbWeight::get().reads(2 as Weight))
	}
	fn handle_withdrawable() -> Weight {
		(20_716_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn handle_depositable() -> Weight {
		(40_066_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn handle_must_liquidate() -> Weight {
		(38_744_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
