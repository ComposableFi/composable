
//! Autogenerated weights for `ibc_transfer`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-07-28, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/composable
// benchmark
// pallet
// --chain=dali-dev
// --execution=wasm
// --wasm-execution=compiled
// --wasm-instantiation-strategy=legacy-instance-reuse
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=20
// --output=runtime/dali/src/weights
// --log
// error

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `ibc_transfer`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> ibc_transfer::WeightInfo for WeightInfo<T> {
	// Storage: Transfer IbcAssetIds (r:1 w:0)
	// Storage: Ibc ChannelsConnection (r:2 w:0)
	// Storage: Ibc ConnectionClient (r:2 w:0)
	// Storage: Transfer Params (r:1 w:0)
	// Storage: AssetsRegistry ForeignToLocal (r:1 w:0)
	// Storage: Tokens Accounts (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: Ibc PacketCounter (r:1 w:1)
	// Storage: unknown [0x6962632f636c69656e74732f30372d74656e6465726d696e742d302f636c6965] (r:1 w:0)
	// Storage: unknown [0x6962632f6368616e6e656c456e64732f706f7274732f7472616e736665722f63] (r:1 w:0)
	// Storage: unknown [0x6962632f6e65787453657175656e636553656e642f706f7274732f7472616e73] (r:1 w:1)
	// Storage: unknown [0x6962632f636f6e6e656374696f6e732f636f6e6e656374696f6e2d30] (r:1 w:0)
	// Storage: unknown [0x6962632f636c69656e74732f30372d74656e6465726d696e742d302f636f6e73] (r:1 w:0)
	// Storage: unknown [0x6962632f636f6d6d69746d656e74732f706f7274732f7472616e736665722f63] (r:0 w:1)
	fn transfer() -> Weight {
		(392_962_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(17 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: Ibc ChannelCounter (r:1 w:1)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: Ibc ChannelsConnection (r:1 w:1)
	// Storage: unknown [0x6962632f636f6e6e656374696f6e732f636f6e6e656374696f6e2d30] (r:1 w:0)
	// Storage: unknown [0x6962632f6368616e6e656c456e64732f706f7274732f7472616e736665722f63] (r:0 w:1)
	// Storage: unknown [0x6962632f6e65787453657175656e636541636b2f706f7274732f7472616e7366] (r:0 w:1)
	// Storage: unknown [0x6962632f6e65787453657175656e6365526563762f706f7274732f7472616e73] (r:0 w:1)
	// Storage: unknown [0x6962632f6e65787453657175656e636553656e642f706f7274732f7472616e73] (r:0 w:1)
	fn open_channel() -> Weight {
		(152_965_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: Transfer Params (r:0 w:1)
	fn set_pallet_params() -> Weight {
		(20_973_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn on_chan_open_init() -> Weight {
		(651_000 as Weight)
	}
	fn on_chan_open_try() -> Weight {
		(807_000 as Weight)
	}
	// Storage: Transfer ChannelIds (r:1 w:1)
	fn on_chan_open_ack() -> Weight {
		(7_206_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Transfer ChannelIds (r:1 w:1)
	fn on_chan_open_confirm() -> Weight {
		(7_219_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Transfer ChannelIds (r:1 w:1)
	fn on_chan_close_init() -> Weight {
		(8_748_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Transfer ChannelIds (r:1 w:1)
	fn on_chan_close_confirm() -> Weight {
		(8_599_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Transfer Params (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Ibc AcknowledgementCounter (r:1 w:1)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: unknown [0x6962632f61636b732f706f7274732f7472616e736665722f6368616e6e656c73] (r:0 w:1)
	fn on_recv_packet() -> Weight {
		(147_514_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: System Account (r:1 w:1)
	fn on_acknowledgement_packet() -> Weight {
		(92_040_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: System Account (r:1 w:1)
	fn on_timeout_packet() -> Weight {
		(91_365_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
