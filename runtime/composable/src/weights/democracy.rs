
//! Autogenerated weights for `democracy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
<<<<<<< HEAD
//! DATE: 2022-05-02, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
=======
//! DATE: 2022-05-06, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
>>>>>>> ca605724 (Pushing benchmark changes)
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("composable-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/composable
// benchmark
// --chain=composable-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=20
// --output=runtime/composable/src/weights
// --log
// error

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `democracy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> democracy::WeightInfo for WeightInfo<T> {
	// Storage: Democracy PublicPropCount (r:1 w:1)
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:0)
	// Storage: Democracy DepositOf (r:0 w:1)
	fn propose() -> Weight {
<<<<<<< HEAD
		(95_482_000 as Weight)
=======
		(90_843_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy DepositOf (r:1 w:1)
	fn second(s: u32, ) -> Weight {
<<<<<<< HEAD
		(54_941_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((349_000 as Weight).saturating_mul(s as Weight))
=======
		(55_081_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((317_000 as Weight).saturating_mul(s as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn vote_new(r: u32, ) -> Weight {
<<<<<<< HEAD
		(72_588_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((269_000 as Weight).saturating_mul(r as Weight))
=======
		(70_497_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((310_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn vote_existing(r: u32, ) -> Weight {
<<<<<<< HEAD
		(70_516_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((320_000 as Weight).saturating_mul(r as Weight))
=======
		(69_512_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((343_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy Cancellations (r:1 w:1)
	fn emergency_cancel() -> Weight {
<<<<<<< HEAD
		(32_167_000 as Weight)
=======
		(32_200_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy Blacklist (r:0 w:1)
	// Storage: Democracy DepositOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn blacklist(p: u32, ) -> Weight {
<<<<<<< HEAD
		(108_822_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((713_000 as Weight).saturating_mul(p as Weight))
=======
		(108_399_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((727_000 as Weight).saturating_mul(p as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:0)
	fn external_propose(v: u32, ) -> Weight {
<<<<<<< HEAD
		(16_918_000 as Weight)
			// Standard Error: 0
			.saturating_add((117_000 as Weight).saturating_mul(v as Weight))
=======
		(16_685_000 as Weight)
			// Standard Error: 0
			.saturating_add((121_000 as Weight).saturating_mul(v as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_majority() -> Weight {
<<<<<<< HEAD
		(3_400_000 as Weight)
=======
		(3_450_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_default() -> Weight {
<<<<<<< HEAD
		(3_350_000 as Weight)
=======
		(3_453_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:1)
	// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn fast_track() -> Weight {
<<<<<<< HEAD
		(33_115_000 as Weight)
=======
		(34_060_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy NextExternal (r:1 w:1)
	// Storage: Democracy Blacklist (r:1 w:1)
	fn veto_external(v: u32, ) -> Weight {
<<<<<<< HEAD
		(35_294_000 as Weight)
=======
		(35_008_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			// Standard Error: 1_000
			.saturating_add((156_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy PublicProps (r:1 w:1)
	// Storage: Democracy DepositOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn cancel_proposal(p: u32, ) -> Weight {
<<<<<<< HEAD
		(78_314_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((724_000 as Weight).saturating_mul(p as Weight))
=======
		(80_184_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((680_000 as Weight).saturating_mul(p as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn cancel_referendum() -> Weight {
<<<<<<< HEAD
		(20_226_000 as Weight)
=======
		(19_714_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Scheduler Lookup (r:1 w:1)
	// Storage: Scheduler Agenda (r:1 w:1)
	fn cancel_queued(r: u32, ) -> Weight {
<<<<<<< HEAD
		(40_135_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((2_007_000 as Weight).saturating_mul(r as Weight))
=======
		(40_472_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((2_370_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy LowestUnbaked (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:0)
	// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base(r: u32, ) -> Weight {
<<<<<<< HEAD
		(6_154_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((6_918_000 as Weight).saturating_mul(r as Weight))
=======
		(5_457_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((6_737_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy LowestUnbaked (r:1 w:1)
	// Storage: Democracy ReferendumCount (r:1 w:0)
	// Storage: Democracy LastTabledWasExternal (r:1 w:0)
	// Storage: Democracy NextExternal (r:1 w:0)
	// Storage: Democracy PublicProps (r:1 w:0)
	// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base_with_launch_period(r: u32, ) -> Weight {
<<<<<<< HEAD
		(16_955_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((6_908_000 as Weight).saturating_mul(r as Weight))
=======
		(14_995_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((6_767_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy VotingOf (r:3 w:3)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn delegate(r: u32, ) -> Weight {
<<<<<<< HEAD
		(66_219_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((9_090_000 as Weight).saturating_mul(r as Weight))
=======
		(66_269_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((8_786_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Democracy VotingOf (r:2 w:2)
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	fn undelegate(r: u32, ) -> Weight {
<<<<<<< HEAD
		(31_794_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((9_048_000 as Weight).saturating_mul(r as Weight))
=======
		(30_226_000 as Weight)
			// Standard Error: 8_000
			.saturating_add((8_913_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Democracy PublicProps (r:0 w:1)
	fn clear_public_proposals() -> Weight {
<<<<<<< HEAD
		(3_719_000 as Weight)
=======
		(3_549_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	fn note_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(51_300_000 as Weight)
=======
		(49_315_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	fn note_imminent_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(33_234_000 as Weight)
=======
		(32_578_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy Preimages (r:1 w:1)
	// Storage: System Account (r:1 w:0)
	fn reap_preimage(b: u32, ) -> Weight {
<<<<<<< HEAD
		(49_161_000 as Weight)
=======
		(48_487_000 as Weight)
>>>>>>> ca605724 (Pushing benchmark changes)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn unlock_remove(r: u32, ) -> Weight {
<<<<<<< HEAD
		(46_051_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((146_000 as Weight).saturating_mul(r as Weight))
=======
		(44_505_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((169_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy VotingOf (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn unlock_set(r: u32, ) -> Weight {
<<<<<<< HEAD
		(43_012_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((287_000 as Weight).saturating_mul(r as Weight))
=======
		(43_188_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((273_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_vote(r: u32, ) -> Weight {
<<<<<<< HEAD
		(25_655_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((248_000 as Weight).saturating_mul(r as Weight))
=======
		(25_450_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((256_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_other_vote(r: u32, ) -> Weight {
<<<<<<< HEAD
		(26_495_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((242_000 as Weight).saturating_mul(r as Weight))
=======
		(25_558_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((256_000 as Weight).saturating_mul(r as Weight))
>>>>>>> ca605724 (Pushing benchmark changes)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
