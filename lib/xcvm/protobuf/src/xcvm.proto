syntax = "proto3";

package xcvm;

message Program {
  // as of now there is only linear interpreter with no fields dependencies
  // so because of protocol specificaiton 2 can be in message because of 1.
  // also specification does not guarantess field is represented only once,
  // so it can repeat it - so please pick implementations which proven not doing it 
  // generally, specification of protobuf is not hash fiendly
  Instructions instructions = 1;
  bytes tag = 2;
}

message Instructions {
  // do not add new fields into this message if there is desire to change message execution 
  // because of possible reoreder and intermingling of repeated fields with other fields.
  // also please pick only implementation which do not reorded repeated, as specificaion does not enforces to do that 
  repeated Instruction instructions = 1;
}

message Instruction {
  oneof instruction {
    Transfer transfer = 1;
    Call call = 2;
    Spawn spawn = 3;
  }
}

message Transfer {
  Account destination = 1;
  map<uint32, Amount> assets = 2;
}

message Call {
  bytes encoded = 1;
}

message Spawn {
  uint32 network = 1;
  bytes salt = 2;
  map<uint32, Amount> assets = 3;
  Program program = 4;
}

message Account {
  bytes encoded = 1;
}

message U128 {
  bytes encoded = 1;
}

message Amount {
  oneof amount {
    Fixed fixed = 1;
    Ratio ratio = 2;
  }
}

message Fixed {
  U128 amount = 1;
}

message Ratio {
  uint32 value = 1;
}
