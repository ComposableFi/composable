{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "GetExchangeResponse",
  "type": "object",
  "required": [
    "exchange"
  ],
  "properties": {
    "exchange": {
      "$ref": "#/definitions/ExchangeItem"
    }
  },
  "definitions": {
    "Displayed_for_uint128": {
      "description": "A wrapper around a type which is serde-serialised as a string.\n\nFor serde-serialisation to be implemented for the type `T` must implement `Display` and `FromStr` traits.\n\n``` # use xc_core::shared::Displayed;\n\n#[derive(serde::Serialize, serde::Deserialize)] struct Foo { value: Displayed<u64> }\n\nlet encoded = serde_json_wasm::to_string(&Foo { value: Displayed(42) }).unwrap(); assert_eq!(r#\"{\"value\":\"42\"}\"#, encoded);\n\nlet decoded = serde_json_wasm::from_str::<Foo>(r#\"{\"value\":\"42\"}\"#).unwrap(); assert_eq!(Displayed(42), decoded.value); ```",
      "type": "integer",
      "format": "uint128",
      "minimum": 0.0
    },
    "ExchangeItem": {
      "description": "allows to execute Exchange instruction",
      "type": "object",
      "required": [
        "exchange",
        "exchange_id",
        "network_id"
      ],
      "properties": {
        "exchange": {
          "$ref": "#/definitions/ExchangeType"
        },
        "exchange_id": {
          "$ref": "#/definitions/Displayed_for_uint128"
        },
        "network_id": {
          "$ref": "#/definitions/NetworkId"
        }
      }
    },
    "ExchangeType": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "osmosis_cross_chain_swap"
          ],
          "properties": {
            "osmosis_cross_chain_swap": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SwapAmountInRoute"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "NetworkId": {
      "description": "Newtype for XCVM networks ID. Must be unique for each network and must never change. This ID is an opaque, arbitrary type from the XCVM protocol and no assumption must be made on how it is computed.",
      "type": "integer",
      "format": "uint32",
      "minimum": 0.0
    },
    "SwapAmountInRoute": {
      "type": "object",
      "required": [
        "pool_id",
        "token_out_denom"
      ],
      "properties": {
        "pool_id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "token_out_denom": {
          "type": "string"
        }
      }
    }
  }
}
