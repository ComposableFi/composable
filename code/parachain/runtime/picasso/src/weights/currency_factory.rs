
//! Autogenerated weights for `currency_factory`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-01, STEPS: `50`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `3a6013dfb40d`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/jif3kmz9kgiwz8hg8nzb9d2kiga1rnga-composable/bin/composable
// benchmark
// pallet
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/picasso/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `currency_factory`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> currency_factory::WeightInfo for WeightInfo<T> {
	/// Storage: CurrencyFactory AssetIdRanges (r:1 w:1)
	/// Proof: CurrencyFactory AssetIdRanges (max_values: Some(1), max_size: Some(8194), added: 8689, mode: MaxEncodedLen)
	fn add_range() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `43`
		//  Estimated: `8689`
		// Minimum execution time: 20_435 nanoseconds.
		Weight::from_ref_time(21_160_000)
			.saturating_add(Weight::from_proof_size(8689))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: CurrencyFactory AssetMetadata (r:0 w:1)
	/// Proof: CurrencyFactory AssetMetadata (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn set_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 6_415 nanoseconds.
		Weight::from_ref_time(6_681_000)
			.saturating_add(Weight::from_proof_size(0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
