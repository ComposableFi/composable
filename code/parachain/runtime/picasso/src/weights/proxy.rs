
//! Autogenerated weights for `proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-03, STEPS: `50`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `4303df0441ee`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/386hzkyz77l1m76kfsnqr70svvd104hq-composable/bin/composable
// benchmark
// pallet
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --wasm-instantiation-strategy=legacy-instance-reuse
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/picasso/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> proxy::WeightInfo for WeightInfo<T> {
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// The range of component `p` is `[1, 3]`.
	fn proxy(_p: u32, ) -> Weight {
		// Minimum execution time: 44_624 nanoseconds.
		Weight::from_ref_time(47_289_665 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn proxy_announced(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 76_284 nanoseconds.
		Weight::from_ref_time(80_246_934 as u64)
			// Standard Error: 10_403
			.saturating_add(Weight::from_ref_time(423_776 as u64).saturating_mul(a as u64))
			// Standard Error: 128_935
			.saturating_add(Weight::from_ref_time(176_764 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn remove_announcement(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 51_134 nanoseconds.
		Weight::from_ref_time(52_990_063 as u64)
			// Standard Error: 7_264
			.saturating_add(Weight::from_ref_time(427_709 as u64).saturating_mul(a as u64))
			// Standard Error: 90_033
			.saturating_add(Weight::from_ref_time(86_584 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn reject_announcement(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 50_604 nanoseconds.
		Weight::from_ref_time(52_963_453 as u64)
			// Standard Error: 6_307
			.saturating_add(Weight::from_ref_time(401_535 as u64).saturating_mul(a as u64))
			// Standard Error: 78_173
			.saturating_add(Weight::from_ref_time(223_679 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn announce(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 64_573 nanoseconds.
		Weight::from_ref_time(67_990_872 as u64)
			// Standard Error: 7_843
			.saturating_add(Weight::from_ref_time(373_378 as u64).saturating_mul(a as u64))
			// Standard Error: 97_203
			.saturating_add(Weight::from_ref_time(324_534 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn add_proxy(p: u32, ) -> Weight {
		// Minimum execution time: 56_884 nanoseconds.
		Weight::from_ref_time(58_358_745 as u64)
			// Standard Error: 72_202
			.saturating_add(Weight::from_ref_time(196_625 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxy(p: u32, ) -> Weight {
		// Minimum execution time: 55_767 nanoseconds.
		Weight::from_ref_time(57_003_657 as u64)
			// Standard Error: 68_680
			.saturating_add(Weight::from_ref_time(546_732 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxies(_p: u32, ) -> Weight {
		// Minimum execution time: 48_113 nanoseconds.
		Weight::from_ref_time(50_267_237 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn create_pure(_p: u32, ) -> Weight {
		// Minimum execution time: 60_255 nanoseconds.
		Weight::from_ref_time(62_373_515 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[0, 2]`.
	fn kill_pure(p: u32, ) -> Weight {
		// Minimum execution time: 50_653 nanoseconds.
		Weight::from_ref_time(52_427_021 as u64)
			// Standard Error: 78_727
			.saturating_add(Weight::from_ref_time(17_549 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}
