
//! Autogenerated weights for `proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-14, STEPS: `50`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `657e6acf5e95`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/7as5b27dws6pfhhpjrs68qfvfx2ldcli-composable/bin/composable
// benchmark
// pallet
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/picasso/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> proxy::WeightInfo for WeightInfo<T> {
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// The range of component `p` is `[1, 3]`.
	fn proxy(_p: u32, ) -> Weight {
		// Minimum execution time: 40_426 nanoseconds.
		Weight::from_ref_time(43_284_643)
			.saturating_add(T::DbWeight::get().reads(2))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn proxy_announced(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 70_241 nanoseconds.
		Weight::from_ref_time(73_161_669)
			// Standard Error: 9_137
			.saturating_add(Weight::from_ref_time(400_394).saturating_mul(a.into()))
			// Standard Error: 113_247
			.saturating_add(Weight::from_ref_time(252_370).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn remove_announcement(a: u32, _p: u32, ) -> Weight {
		// Minimum execution time: 46_471 nanoseconds.
		Weight::from_ref_time(49_243_778)
			// Standard Error: 6_266
			.saturating_add(Weight::from_ref_time(368_360).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn reject_announcement(a: u32, _p: u32, ) -> Weight {
		// Minimum execution time: 45_950 nanoseconds.
		Weight::from_ref_time(50_163_286)
			// Standard Error: 6_645
			.saturating_add(Weight::from_ref_time(335_093).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn announce(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 57_422 nanoseconds.
		Weight::from_ref_time(60_812_736)
			// Standard Error: 6_943
			.saturating_add(Weight::from_ref_time(379_391).saturating_mul(a.into()))
			// Standard Error: 86_047
			.saturating_add(Weight::from_ref_time(183_579).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn add_proxy(p: u32, ) -> Weight {
		// Minimum execution time: 51_339 nanoseconds.
		Weight::from_ref_time(52_820_806)
			// Standard Error: 68_547
			.saturating_add(Weight::from_ref_time(161_085).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxy(p: u32, ) -> Weight {
		// Minimum execution time: 51_231 nanoseconds.
		Weight::from_ref_time(52_135_777)
			// Standard Error: 80_864
			.saturating_add(Weight::from_ref_time(701_533).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxies(p: u32, ) -> Weight {
		// Minimum execution time: 44_076 nanoseconds.
		Weight::from_ref_time(45_484_414)
			// Standard Error: 63_058
			.saturating_add(Weight::from_ref_time(190_696).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn create_pure(p: u32, ) -> Weight {
		// Minimum execution time: 54_191 nanoseconds.
		Weight::from_ref_time(55_976_961)
			// Standard Error: 96_126
			.saturating_add(Weight::from_ref_time(218_931).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[0, 2]`.
	fn kill_pure(_p: u32, ) -> Weight {
		// Minimum execution time: 46_023 nanoseconds.
		Weight::from_ref_time(47_772_092)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
