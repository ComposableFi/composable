
//! Autogenerated weights for `proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-31, STEPS: `50`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `63ca8f3a24df`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/09061ivwqrfybnf0kcnmgkyx8a7mfn83-composable/bin/composable
// benchmark
// pallet
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/picasso/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> proxy::WeightInfo for WeightInfo<T> {
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn proxy(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `300 + p * (38 ±0)`
		//  Estimated: `5367`
		// Minimum execution time: 33_888 nanoseconds.
		Weight::from_ref_time(35_502_626)
			.saturating_add(Weight::from_proof_size(5367))
			// Standard Error: 64_669
			.saturating_add(Weight::from_ref_time(58_127).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn proxy_announced(a: u32, _p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `792 + a * (68 ±0) + p * (4 ±0)`
		//  Estimated: `12678`
		// Minimum execution time: 65_766 nanoseconds.
		Weight::from_ref_time(70_046_688)
			.saturating_add(Weight::from_proof_size(12678))
			// Standard Error: 8_796
			.saturating_add(Weight::from_ref_time(414_232).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn remove_announcement(a: u32, _p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `602 + a * (68 ±0)`
		//  Estimated: `7311`
		// Minimum execution time: 37_803 nanoseconds.
		Weight::from_ref_time(40_792_210)
			.saturating_add(Weight::from_proof_size(7311))
			// Standard Error: 4_448
			.saturating_add(Weight::from_ref_time(407_049).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn reject_announcement(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `602 + a * (68 ±0)`
		//  Estimated: `7311`
		// Minimum execution time: 38_025 nanoseconds.
		Weight::from_ref_time(40_244_805)
			.saturating_add(Weight::from_proof_size(7311))
			// Standard Error: 4_657
			.saturating_add(Weight::from_ref_time(410_987).saturating_mul(a.into()))
			// Standard Error: 57_723
			.saturating_add(Weight::from_ref_time(30_422).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn announce(a: u32, _p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `648 + a * (68 ±0) + p * (4 ±0)`
		//  Estimated: `9991`
		// Minimum execution time: 52_355 nanoseconds.
		Weight::from_ref_time(56_136_736)
			.saturating_add(Weight::from_proof_size(9991))
			// Standard Error: 6_646
			.saturating_add(Weight::from_ref_time(413_742).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn add_proxy(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `224 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 42_623 nanoseconds.
		Weight::from_ref_time(44_409_211)
			.saturating_add(Weight::from_proof_size(2680))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxy(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `224 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 41_291 nanoseconds.
		Weight::from_ref_time(42_001_260)
			.saturating_add(Weight::from_proof_size(2680))
			// Standard Error: 51_071
			.saturating_add(Weight::from_ref_time(700_802).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxies(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `224 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 33_474 nanoseconds.
		Weight::from_ref_time(35_138_655)
			.saturating_add(Weight::from_proof_size(2680))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn create_pure(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `206`
		//  Estimated: `2680`
		// Minimum execution time: 46_451 nanoseconds.
		Weight::from_ref_time(47_813_378)
			.saturating_add(Weight::from_proof_size(2680))
			// Standard Error: 58_239
			.saturating_add(Weight::from_ref_time(78_014).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[0, 2]`.
	fn kill_pure(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `262 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 35_318 nanoseconds.
		Weight::from_ref_time(37_133_198)
			.saturating_add(Weight::from_proof_size(2680))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
