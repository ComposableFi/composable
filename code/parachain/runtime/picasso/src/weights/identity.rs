
//! Autogenerated weights for `identity`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-31, STEPS: `50`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `63ca8f3a24df`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/09061ivwqrfybnf0kcnmgkyx8a7mfn83-composable/bin/composable
// benchmark
// pallet
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/picasso/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `identity`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> identity::WeightInfo for WeightInfo<T> {
	/// Storage: Identity Registrars (r:1 w:1)
	/// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 7]`.
	fn add_registrar(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `64 + r * (57 ±0)`
		//  Estimated: `952`
		// Minimum execution time: 21_238 nanoseconds.
		Weight::from_ref_time(21_626_143)
			.saturating_add(Weight::from_proof_size(952))
			// Standard Error: 13_605
			.saturating_add(Weight::from_ref_time(642_206).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Identity IdentityOf (r:1 w:1)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `x` is `[0, 32]`.
	fn set_identity(r: u32, x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `474 + r * (5 ±0)`
		//  Estimated: `5136`
		// Minimum execution time: 38_030 nanoseconds.
		Weight::from_ref_time(50_204_282)
			.saturating_add(Weight::from_proof_size(5136))
			// Standard Error: 62_408
			.saturating_add(Weight::from_ref_time(519_928).saturating_mul(r.into()))
			// Standard Error: 14_312
			.saturating_add(Weight::from_ref_time(1_075_116).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Identity IdentityOf (r:1 w:0)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// Storage: Identity SubsOf (r:1 w:1)
	/// Proof: Identity SubsOf (max_values: None, max_size: Some(1081), added: 3556, mode: MaxEncodedLen)
	/// Storage: Identity SuperOf (r:32 w:32)
	/// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	/// The range of component `s` is `[0, 32]`.
	fn set_subs_new(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `101`
		//  Estimated: `8692 + s * (2589 ±0)`
		// Minimum execution time: 16_575 nanoseconds.
		Weight::from_ref_time(37_204_134)
			.saturating_add(Weight::from_proof_size(8692))
			// Standard Error: 29_924
			.saturating_add(Weight::from_ref_time(5_735_318).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(s.into())))
			.saturating_add(T::DbWeight::get().writes(1))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(s.into())))
			.saturating_add(Weight::from_proof_size(2589).saturating_mul(s.into()))
	}
	/// Storage: Identity IdentityOf (r:1 w:0)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// Storage: Identity SubsOf (r:1 w:1)
	/// Proof: Identity SubsOf (max_values: None, max_size: Some(1081), added: 3556, mode: MaxEncodedLen)
	/// Storage: Identity SuperOf (r:0 w:32)
	/// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	/// The range of component `p` is `[0, 32]`.
	fn set_subs_old(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `226 + p * (32 ±0)`
		//  Estimated: `8692`
		// Minimum execution time: 16_496 nanoseconds.
		Weight::from_ref_time(36_811_378)
			.saturating_add(Weight::from_proof_size(8692))
			// Standard Error: 28_334
			.saturating_add(Weight::from_ref_time(2_382_142).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(p.into())))
	}
	/// Storage: Identity SubsOf (r:1 w:1)
	/// Proof: Identity SubsOf (max_values: None, max_size: Some(1081), added: 3556, mode: MaxEncodedLen)
	/// Storage: Identity IdentityOf (r:1 w:1)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// Storage: Identity SuperOf (r:0 w:32)
	/// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `s` is `[0, 32]`.
	/// The range of component `x` is `[0, 32]`.
	fn clear_identity(r: u32, s: u32, x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `533 + r * (5 ±0) + s * (32 ±0) + x * (66 ±0)`
		//  Estimated: `8692`
		// Minimum execution time: 66_454 nanoseconds.
		Weight::from_ref_time(51_773_326)
			.saturating_add(Weight::from_proof_size(8692))
			// Standard Error: 30_533
			.saturating_add(Weight::from_ref_time(293_319).saturating_mul(r.into()))
			// Standard Error: 7_006
			.saturating_add(Weight::from_ref_time(2_148_332).saturating_mul(s.into()))
			// Standard Error: 7_006
			.saturating_add(Weight::from_ref_time(496_486).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(s.into())))
	}
	/// Storage: Identity Registrars (r:1 w:0)
	/// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
	/// Storage: Identity IdentityOf (r:1 w:1)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `x` is `[0, 32]`.
	fn request_judgement(r: u32, x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `430 + r * (57 ±0) + x * (66 ±0)`
		//  Estimated: `6088`
		// Minimum execution time: 55_222 nanoseconds.
		Weight::from_ref_time(53_367_604)
			.saturating_add(Weight::from_proof_size(6088))
			// Standard Error: 28_150
			.saturating_add(Weight::from_ref_time(512_710).saturating_mul(r.into()))
			// Standard Error: 6_455
			.saturating_add(Weight::from_ref_time(1_003_871).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Identity IdentityOf (r:1 w:1)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `x` is `[0, 32]`.
	fn cancel_request(r: u32, x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429 + x * (66 ±0)`
		//  Estimated: `5136`
		// Minimum execution time: 50_338 nanoseconds.
		Weight::from_ref_time(50_036_406)
			.saturating_add(Weight::from_proof_size(5136))
			// Standard Error: 22_175
			.saturating_add(Weight::from_ref_time(257_563).saturating_mul(r.into()))
			// Standard Error: 5_085
			.saturating_add(Weight::from_ref_time(1_012_222).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Identity Registrars (r:1 w:1)
	/// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 7]`.
	fn set_fee(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `121 + r * (57 ±0)`
		//  Estimated: `952`
		// Minimum execution time: 13_574 nanoseconds.
		Weight::from_ref_time(13_776_546)
			.saturating_add(Weight::from_proof_size(952))
			// Standard Error: 8_567
			.saturating_add(Weight::from_ref_time(469_787).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Identity Registrars (r:1 w:1)
	/// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 7]`.
	fn set_account_id(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `121 + r * (57 ±0)`
		//  Estimated: `952`
		// Minimum execution time: 13_627 nanoseconds.
		Weight::from_ref_time(14_017_782)
			.saturating_add(Weight::from_proof_size(952))
			// Standard Error: 10_070
			.saturating_add(Weight::from_ref_time(474_713).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Identity Registrars (r:1 w:1)
	/// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 7]`.
	fn set_fields(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `121 + r * (57 ±0)`
		//  Estimated: `952`
		// Minimum execution time: 13_649 nanoseconds.
		Weight::from_ref_time(13_832_046)
			.saturating_add(Weight::from_proof_size(952))
			// Standard Error: 7_882
			.saturating_add(Weight::from_ref_time(496_073).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Identity Registrars (r:1 w:0)
	/// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
	/// Storage: Identity IdentityOf (r:1 w:1)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 7]`.
	/// The range of component `x` is `[0, 32]`.
	fn provide_judgement(r: u32, x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `508 + r * (57 ±0) + x * (66 ±0)`
		//  Estimated: `6088`
		// Minimum execution time: 41_121 nanoseconds.
		Weight::from_ref_time(40_467_738)
			.saturating_add(Weight::from_proof_size(6088))
			// Standard Error: 28_838
			.saturating_add(Weight::from_ref_time(382_459).saturating_mul(r.into()))
			// Standard Error: 5_808
			.saturating_add(Weight::from_ref_time(1_589_928).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Identity SubsOf (r:1 w:1)
	/// Proof: Identity SubsOf (max_values: None, max_size: Some(1081), added: 3556, mode: MaxEncodedLen)
	/// Storage: Identity IdentityOf (r:1 w:1)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Identity SuperOf (r:0 w:32)
	/// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `s` is `[0, 32]`.
	/// The range of component `x` is `[0, 32]`.
	fn kill_identity(r: u32, s: u32, x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `907 + r * (5 ±0) + s * (32 ±0) + x * (66 ±0)`
		//  Estimated: `13898`
		// Minimum execution time: 93_617 nanoseconds.
		Weight::from_ref_time(81_257_827)
			.saturating_add(Weight::from_proof_size(13898))
			// Standard Error: 37_475
			.saturating_add(Weight::from_ref_time(230_257).saturating_mul(r.into()))
			// Standard Error: 8_599
			.saturating_add(Weight::from_ref_time(2_154_944).saturating_mul(s.into()))
			// Standard Error: 8_599
			.saturating_add(Weight::from_ref_time(524_774).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(s.into())))
	}
	/// Storage: Identity IdentityOf (r:1 w:0)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// Storage: Identity SuperOf (r:1 w:1)
	/// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	/// Storage: Identity SubsOf (r:1 w:1)
	/// Proof: Identity SubsOf (max_values: None, max_size: Some(1081), added: 3556, mode: MaxEncodedLen)
	/// The range of component `s` is `[0, 31]`.
	fn add_sub(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `291 + s * (45 ±0)`
		//  Estimated: `11281`
		// Minimum execution time: 49_305 nanoseconds.
		Weight::from_ref_time(55_100_919)
			.saturating_add(Weight::from_proof_size(11281))
			// Standard Error: 9_745
			.saturating_add(Weight::from_ref_time(315_233).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Identity IdentityOf (r:1 w:0)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// Storage: Identity SuperOf (r:1 w:1)
	/// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	/// The range of component `s` is `[1, 32]`.
	fn rename_sub(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `368 + s * (13 ±0)`
		//  Estimated: `7725`
		// Minimum execution time: 21_793 nanoseconds.
		Weight::from_ref_time(24_189_417)
			.saturating_add(Weight::from_proof_size(7725))
			// Standard Error: 5_520
			.saturating_add(Weight::from_ref_time(126_866).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Identity IdentityOf (r:1 w:0)
	/// Proof: Identity IdentityOf (max_values: None, max_size: Some(2661), added: 5136, mode: MaxEncodedLen)
	/// Storage: Identity SuperOf (r:1 w:1)
	/// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	/// Storage: Identity SubsOf (r:1 w:1)
	/// Proof: Identity SubsOf (max_values: None, max_size: Some(1081), added: 3556, mode: MaxEncodedLen)
	/// The range of component `s` is `[1, 32]`.
	fn remove_sub(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `448 + s * (45 ±0)`
		//  Estimated: `11281`
		// Minimum execution time: 54_203 nanoseconds.
		Weight::from_ref_time(57_076_244)
			.saturating_add(Weight::from_proof_size(11281))
			// Standard Error: 9_408
			.saturating_add(Weight::from_ref_time(319_284).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Identity SuperOf (r:1 w:1)
	/// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	/// Storage: Identity SubsOf (r:1 w:1)
	/// Proof: Identity SubsOf (max_values: None, max_size: Some(1081), added: 3556, mode: MaxEncodedLen)
	/// The range of component `s` is `[0, 31]`.
	fn quit_sub(s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `400 + s * (46 ±0)`
		//  Estimated: `6145`
		// Minimum execution time: 34_334 nanoseconds.
		Weight::from_ref_time(36_512_630)
			.saturating_add(Weight::from_proof_size(6145))
			// Standard Error: 5_220
			.saturating_add(Weight::from_ref_time(285_256).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
