
//! Autogenerated weights for `oracle`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-02, STEPS: `50`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `36fdccbe8ae4`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/lcpwsrfjcwvf76fhx7cxpy7ngcbzd04j-composable/bin/composable
// benchmark
// pallet
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/picasso/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `oracle`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> oracle::WeightInfo for WeightInfo<T> {
	/// Storage: Oracle AssetsCount (r:1 w:1)
	/// Proof: Oracle AssetsCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Oracle RewardTrackerStore (r:1 w:1)
	/// Proof: Oracle RewardTrackerStore (max_values: Some(1), max_size: Some(64), added: 559, mode: MaxEncodedLen)
	/// Storage: Oracle AssetsInfo (r:1 w:1)
	/// Proof: Oracle AssetsInfo (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	fn add_asset_and_info() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `3611`
		// Minimum execution time: 24_896 nanoseconds.
		Weight::from_parts(25_864_000, 3611)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Oracle RewardTrackerStore (r:1 w:1)
	/// Proof: Oracle RewardTrackerStore (max_values: Some(1), max_size: Some(64), added: 559, mode: MaxEncodedLen)
	fn adjust_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `152`
		//  Estimated: `1062`
		// Minimum execution time: 22_139 nanoseconds.
		Weight::from_parts(22_749_000, 1062)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Oracle ControllerToSigner (r:1 w:1)
	/// Proof: Oracle ControllerToSigner (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Oracle SignerToController (r:1 w:1)
	/// Proof: Oracle SignerToController (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Oracle OracleStake (r:1 w:1)
	/// Proof: Oracle OracleStake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	fn set_signer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `7649`
		// Minimum execution time: 81_755 nanoseconds.
		Weight::from_parts(85_016_000, 7649)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: Oracle ControllerToSigner (r:1 w:0)
	/// Proof: Oracle ControllerToSigner (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Oracle OracleStake (r:1 w:1)
	/// Proof: Oracle OracleStake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn add_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `182`
		//  Estimated: `7697`
		// Minimum execution time: 72_518 nanoseconds.
		Weight::from_parts(73_257_000, 7697)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Oracle ControllerToSigner (r:1 w:0)
	/// Proof: Oracle ControllerToSigner (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Oracle OracleStake (r:1 w:1)
	/// Proof: Oracle OracleStake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Oracle DeclaredWithdraws (r:0 w:1)
	/// Proof: Oracle DeclaredWithdraws (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	fn remove_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `268`
		//  Estimated: `5094`
		// Minimum execution time: 29_609 nanoseconds.
		Weight::from_parts(30_452_000, 5094)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Oracle ControllerToSigner (r:1 w:1)
	/// Proof: Oracle ControllerToSigner (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Oracle DeclaredWithdraws (r:1 w:1)
	/// Proof: Oracle DeclaredWithdraws (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Oracle SignerToController (r:0 w:1)
	/// Proof: Oracle SignerToController (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	fn reclaim_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `308`
		//  Estimated: `7701`
		// Minimum execution time: 33_879 nanoseconds.
		Weight::from_parts(35_085_000, 7701)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: Oracle OracleStake (r:1 w:0)
	/// Proof: Oracle OracleStake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Oracle Prices (r:1 w:0)
	/// Proof: Oracle Prices (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Oracle AssetsInfo (r:1 w:0)
	/// Proof: Oracle AssetsInfo (max_values: None, max_size: Some(78), added: 2553, mode: MaxEncodedLen)
	/// Storage: Oracle AnswerInTransit (r:1 w:1)
	/// Proof: Oracle AnswerInTransit (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Oracle PrePrices (r:1 w:1)
	/// Proof: Oracle PrePrices (max_values: None, max_size: Some(2113), added: 4588, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 25]`.
	fn submit_price(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `336 + p * (52 ±0)`
		//  Estimated: `14746`
		// Minimum execution time: 41_275 nanoseconds.
		Weight::from_parts(43_367_309, 14746)
			// Standard Error: 9_870
			.saturating_add(Weight::from_ref_time(168_222).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Oracle PrePrices (r:1 w:1)
	/// Proof: Oracle PrePrices (max_values: None, max_size: Some(2113), added: 4588, mode: MaxEncodedLen)
	/// Storage: Oracle AnswerInTransit (r:1 w:1)
	/// Proof: Oracle AnswerInTransit (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 25]`.
	fn update_pre_prices(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `169 + p * (52 ±0)`
		//  Estimated: `7127`
		// Minimum execution time: 13_518 nanoseconds.
		Weight::from_parts(14_395_028, 7127)
			// Standard Error: 3_654
			.saturating_add(Weight::from_ref_time(168_063).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Oracle PriceHistory (r:1 w:1)
	/// Proof: Oracle PriceHistory (max_values: None, max_size: Some(433), added: 2908, mode: MaxEncodedLen)
	/// Storage: Oracle SignerToController (r:1 w:0)
	/// Proof: Oracle SignerToController (max_values: None, max_size: Some(80), added: 2555, mode: MaxEncodedLen)
	/// Storage: Oracle AnswerInTransit (r:1 w:1)
	/// Proof: Oracle AnswerInTransit (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: Oracle RewardTrackerStore (r:1 w:0)
	/// Proof: Oracle RewardTrackerStore (max_values: Some(1), max_size: Some(64), added: 559, mode: MaxEncodedLen)
	/// Storage: Oracle Prices (r:0 w:1)
	/// Proof: Oracle Prices (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Oracle PrePrices (r:0 w:1)
	/// Proof: Oracle PrePrices (max_values: None, max_size: Some(2113), added: 4588, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 25]`.
	fn update_price(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `569`
		//  Estimated: `8561`
		// Minimum execution time: 30_207 nanoseconds.
		Weight::from_parts(31_985_056, 8561)
			// Standard Error: 141_849
			.saturating_add(Weight::from_ref_time(4_005_562).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
}
