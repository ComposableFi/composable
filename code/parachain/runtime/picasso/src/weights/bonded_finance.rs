
//! Autogenerated weights for `bonded_finance`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-02, STEPS: `50`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `36fdccbe8ae4`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("picasso-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/lcpwsrfjcwvf76fhx7cxpy7ngcbzd04j-composable/bin/composable
// benchmark
// pallet
// --chain=picasso-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/picasso/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `bonded_finance`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> bonded_finance::WeightInfo for WeightInfo<T> {
	/// Storage: BondedFinance BondOfferCount (r:1 w:1)
	/// Proof Skipped: BondedFinance BondOfferCount (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(120), added: 2595, mode: MaxEncodedLen)
	/// Storage: BondedFinance BondOffers (r:0 w:1)
	/// Proof Skipped: BondedFinance BondOffers (max_values: None, max_size: None, mode: Measured)
	fn offer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `577`
		//  Estimated: `12045`
		// Minimum execution time: 104_144 nanoseconds.
		Weight::from_parts(107_095_000, 12045)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: BondedFinance BondOffers (r:1 w:1)
	/// Proof Skipped: BondedFinance BondOffers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(120), added: 2595, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Vesting VestingScheduleNonce (r:1 w:1)
	/// Proof Skipped: Vesting VestingScheduleNonce (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Vesting VestingSchedules (r:2 w:2)
	/// Proof Skipped: Vesting VestingSchedules (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Locks (r:2 w:2)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1273), added: 3748, mode: MaxEncodedLen)
	fn bond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1405`
		//  Estimated: `35217`
		// Minimum execution time: 257_066 nanoseconds.
		Weight::from_parts(264_705_000, 35217)
			.saturating_add(T::DbWeight::get().reads(12))
			.saturating_add(T::DbWeight::get().writes(12))
	}
	/// Storage: BondedFinance BondOffers (r:1 w:1)
	/// Proof Skipped: BondedFinance BondOffers (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn cancel() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `766`
		//  Estimated: `8447`
		// Minimum execution time: 58_371 nanoseconds.
		Weight::from_parts(59_696_000, 8447)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
}
