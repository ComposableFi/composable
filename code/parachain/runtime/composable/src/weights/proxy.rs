
//! Autogenerated weights for `proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-01, STEPS: `50`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `d10f4923b852`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("composable-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/jif3kmz9kgiwz8hg8nzb9d2kiga1rnga-composable/bin/composable
// benchmark
// pallet
// --chain=composable-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/composable/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> proxy::WeightInfo for WeightInfo<T> {
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn proxy(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `267 + p * (38 ±0)`
		//  Estimated: `5367`
		// Minimum execution time: 34_559 nanoseconds.
		Weight::from_ref_time(36_553_223)
			.saturating_add(Weight::from_proof_size(5367))
			// Standard Error: 144_120
			.saturating_add(Weight::from_ref_time(104_519).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn proxy_announced(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `759 + a * (68 ±0) + p * (4 ±0)`
		//  Estimated: `12678`
		// Minimum execution time: 66_603 nanoseconds.
		Weight::from_ref_time(70_301_232)
			.saturating_add(Weight::from_proof_size(12678))
			// Standard Error: 9_713
			.saturating_add(Weight::from_ref_time(445_907).saturating_mul(a.into()))
			// Standard Error: 120_379
			.saturating_add(Weight::from_ref_time(298_154).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn remove_announcement(a: u32, _p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `569 + a * (68 ±0)`
		//  Estimated: `7311`
		// Minimum execution time: 37_294 nanoseconds.
		Weight::from_ref_time(40_708_080)
			.saturating_add(Weight::from_proof_size(7311))
			// Standard Error: 6_492
			.saturating_add(Weight::from_ref_time(434_577).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn reject_announcement(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `569 + a * (68 ±0)`
		//  Estimated: `7311`
		// Minimum execution time: 37_623 nanoseconds.
		Weight::from_ref_time(40_007_063)
			.saturating_add(Weight::from_proof_size(7311))
			// Standard Error: 6_777
			.saturating_add(Weight::from_ref_time(435_029).saturating_mul(a.into()))
			// Standard Error: 83_992
			.saturating_add(Weight::from_ref_time(170_219).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn announce(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `615 + a * (68 ±0) + p * (4 ±0)`
		//  Estimated: `9991`
		// Minimum execution time: 51_262 nanoseconds.
		Weight::from_ref_time(54_255_697)
			.saturating_add(Weight::from_proof_size(9991))
			// Standard Error: 8_532
			.saturating_add(Weight::from_ref_time(457_915).saturating_mul(a.into()))
			// Standard Error: 105_748
			.saturating_add(Weight::from_ref_time(371_389).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn add_proxy(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 42_597 nanoseconds.
		Weight::from_ref_time(44_321_410)
			.saturating_add(Weight::from_proof_size(2680))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxy(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 41_421 nanoseconds.
		Weight::from_ref_time(42_196_384)
			.saturating_add(Weight::from_proof_size(2680))
			// Standard Error: 64_496
			.saturating_add(Weight::from_ref_time(658_026).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxies(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 33_353 nanoseconds.
		Weight::from_ref_time(35_019_936)
			.saturating_add(Weight::from_proof_size(2680))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn create_pure(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `173`
		//  Estimated: `2680`
		// Minimum execution time: 46_011 nanoseconds.
		Weight::from_ref_time(47_960_568)
			.saturating_add(Weight::from_proof_size(2680))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[0, 2]`.
	fn kill_pure(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `229 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 35_404 nanoseconds.
		Weight::from_ref_time(38_218_880)
			.saturating_add(Weight::from_proof_size(2680))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
