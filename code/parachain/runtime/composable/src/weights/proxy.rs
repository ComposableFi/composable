
//! Autogenerated weights for `proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-02, STEPS: `50`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `0cb664f08cc0`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("composable-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/lcpwsrfjcwvf76fhx7cxpy7ngcbzd04j-composable/bin/composable
// benchmark
// pallet
// --chain=composable-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/composable/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> proxy::WeightInfo for WeightInfo<T> {
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn proxy(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `267 + p * (38 ±0)`
		//  Estimated: `5367`
		// Minimum execution time: 30_608 nanoseconds.
		Weight::from_parts(32_215_846, 5367)
			// Standard Error: 71_420
			.saturating_add(Weight::from_ref_time(26_356).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn proxy_announced(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `759 + a * (68 ±0) + p * (4 ±0)`
		//  Estimated: `12678`
		// Minimum execution time: 59_667 nanoseconds.
		Weight::from_parts(62_856_484, 12678)
			// Standard Error: 8_970
			.saturating_add(Weight::from_ref_time(367_347).saturating_mul(a.into()))
			// Standard Error: 111_177
			.saturating_add(Weight::from_ref_time(101_753).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn remove_announcement(a: u32, p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `569 + a * (68 ±0)`
		//  Estimated: `7311`
		// Minimum execution time: 33_835 nanoseconds.
		Weight::from_parts(36_201_633, 7311)
			// Standard Error: 5_617
			.saturating_add(Weight::from_ref_time(358_529).saturating_mul(a.into()))
			// Standard Error: 69_623
			.saturating_add(Weight::from_ref_time(4_139).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn reject_announcement(a: u32, _p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `569 + a * (68 ±0)`
		//  Estimated: `7311`
		// Minimum execution time: 33_810 nanoseconds.
		Weight::from_parts(35_986_009, 7311)
			// Standard Error: 4_436
			.saturating_add(Weight::from_ref_time(355_658).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Proxies (r:1 w:0)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// Storage: Proxy Announcements (r:1 w:1)
	/// Proof: Proxy Announcements (max_values: None, max_size: Some(2233), added: 4708, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn announce(a: u32, _p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `615 + a * (68 ±0) + p * (4 ±0)`
		//  Estimated: `9991`
		// Minimum execution time: 45_961 nanoseconds.
		Weight::from_parts(49_704_645, 9991)
			// Standard Error: 5_884
			.saturating_add(Weight::from_ref_time(342_923).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn add_proxy(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 36_874 nanoseconds.
		Weight::from_parts(38_910_851, 2680)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxy(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 36_331 nanoseconds.
		Weight::from_parts(37_186_613, 2680)
			// Standard Error: 54_396
			.saturating_add(Weight::from_ref_time(537_837).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxies(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `191 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 29_430 nanoseconds.
		Weight::from_parts(31_202_928, 2680)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[1, 3]`.
	fn create_pure(_p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `173`
		//  Estimated: `2680`
		// Minimum execution time: 40_026 nanoseconds.
		Weight::from_parts(41_820_835, 2680)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(205), added: 2680, mode: MaxEncodedLen)
	/// The range of component `p` is `[0, 2]`.
	fn kill_pure(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `229 + p * (38 ±0)`
		//  Estimated: `2680`
		// Minimum execution time: 31_232 nanoseconds.
		Weight::from_parts(32_843_297, 2680)
			// Standard Error: 73_951
			.saturating_add(Weight::from_ref_time(39_804).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
