
//! Autogenerated weights for `utility`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-01, STEPS: `50`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `d10f4923b852`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("composable-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/jif3kmz9kgiwz8hg8nzb9d2kiga1rnga-composable/bin/composable
// benchmark
// pallet
// --chain=composable-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/composable/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(deprecated)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `utility`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> utility::WeightInfo for WeightInfo<T> {
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	/// The range of component `c` is `[0, 1000]`.
	fn batch(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `2687`
		// Minimum execution time: 12_978 nanoseconds.
		Weight::from_ref_time(13_246_000)
			.saturating_add(Weight::from_proof_size(2687))
			// Standard Error: 40_022
			.saturating_add(Weight::from_ref_time(13_131_183).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	fn as_derivative() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `2687`
		// Minimum execution time: 16_982 nanoseconds.
		Weight::from_ref_time(17_441_000)
			.saturating_add(Weight::from_proof_size(2687))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	/// The range of component `c` is `[0, 1000]`.
	fn batch_all(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `2687`
		// Minimum execution time: 15_524 nanoseconds.
		Weight::from_ref_time(17_691_497)
			.saturating_add(Weight::from_proof_size(2687))
			// Standard Error: 33_274
			.saturating_add(Weight::from_ref_time(13_599_689).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	fn dispatch_as() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 17_528 nanoseconds.
		Weight::from_ref_time(18_437_000)
			.saturating_add(Weight::from_proof_size(0))
	}
	/// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// Proof: CallFilter DisabledCalls (max_values: None, max_size: Some(212), added: 2687, mode: MaxEncodedLen)
	/// The range of component `c` is `[0, 1000]`.
	fn force_batch(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `2687`
		// Minimum execution time: 12_922 nanoseconds.
		Weight::from_ref_time(15_254_107)
			.saturating_add(Weight::from_proof_size(2687))
			// Standard Error: 34_897
			.saturating_add(Weight::from_ref_time(12_976_473).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(1))
	}
}
