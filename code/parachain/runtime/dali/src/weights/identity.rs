
//! Autogenerated weights for `identity`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-08, STEPS: `50`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `05551ac21fb8`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/9gdd70pyc12n9i1v6gx99rhz8q2n67z0-composable/bin/composable
// benchmark
// pallet
// --chain=dali-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/dali/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `identity`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> identity::WeightInfo for WeightInfo<T> {
	// Storage: Identity Registrars (r:1 w:1)
	/// The range of component `r` is `[1, 7]`.
	fn add_registrar(r: u32, ) -> Weight {
		// Minimum execution time: 32_574 nanoseconds.
		Weight::from_ref_time(33_158_334 as u64)
			// Standard Error: 15_992
			.saturating_add(Weight::from_ref_time(713_332 as u64).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Identity IdentityOf (r:1 w:1)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `x` is `[0, 32]`.
	fn set_identity(r: u32, x: u32, ) -> Weight {
		// Minimum execution time: 48_389 nanoseconds.
		Weight::from_ref_time(62_839_249 as u64)
			// Standard Error: 71_324
			.saturating_add(Weight::from_ref_time(607_869 as u64).saturating_mul(r as u64))
			// Standard Error: 16_356
			.saturating_add(Weight::from_ref_time(847_586 as u64).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SubsOf (r:1 w:1)
	// Storage: Identity SuperOf (r:1 w:1)
	/// The range of component `s` is `[0, 32]`.
	fn set_subs_new(s: u32, ) -> Weight {
		// Minimum execution time: 20_490 nanoseconds.
		Weight::from_ref_time(49_425_213 as u64)
			// Standard Error: 39_970
			.saturating_add(Weight::from_ref_time(5_128_542 as u64).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SubsOf (r:1 w:1)
	// Storage: Identity SuperOf (r:0 w:1)
	/// The range of component `p` is `[0, 32]`.
	fn set_subs_old(p: u32, ) -> Weight {
		// Minimum execution time: 20_265 nanoseconds.
		Weight::from_ref_time(50_128_142 as u64)
			// Standard Error: 41_547
			.saturating_add(Weight::from_ref_time(2_336_245 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(p as u64)))
	}
	// Storage: Identity SubsOf (r:1 w:1)
	// Storage: Identity IdentityOf (r:1 w:1)
	// Storage: Identity SuperOf (r:0 w:32)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `s` is `[0, 32]`.
	/// The range of component `x` is `[0, 32]`.
	fn clear_identity(r: u32, s: u32, x: u32, ) -> Weight {
		// Minimum execution time: 77_065 nanoseconds.
		Weight::from_ref_time(67_392_948 as u64)
			// Standard Error: 38_772
			.saturating_add(Weight::from_ref_time(296_159 as u64).saturating_mul(r as u64))
			// Standard Error: 8_897
			.saturating_add(Weight::from_ref_time(2_060_494 as u64).saturating_mul(s as u64))
			// Standard Error: 8_897
			.saturating_add(Weight::from_ref_time(395_423 as u64).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Identity Registrars (r:1 w:0)
	// Storage: Identity IdentityOf (r:1 w:1)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `x` is `[0, 32]`.
	fn request_judgement(r: u32, x: u32, ) -> Weight {
		// Minimum execution time: 69_213 nanoseconds.
		Weight::from_ref_time(66_119_343 as u64)
			// Standard Error: 31_419
			.saturating_add(Weight::from_ref_time(689_543 as u64).saturating_mul(r as u64))
			// Standard Error: 7_205
			.saturating_add(Weight::from_ref_time(821_961 as u64).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Identity IdentityOf (r:1 w:1)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `x` is `[0, 32]`.
	fn cancel_request(r: u32, x: u32, ) -> Weight {
		// Minimum execution time: 63_281 nanoseconds.
		Weight::from_ref_time(62_420_300 as u64)
			// Standard Error: 28_833
			.saturating_add(Weight::from_ref_time(431_906 as u64).saturating_mul(r as u64))
			// Standard Error: 6_612
			.saturating_add(Weight::from_ref_time(813_330 as u64).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Identity Registrars (r:1 w:1)
	/// The range of component `r` is `[1, 7]`.
	fn set_fee(r: u32, ) -> Weight {
		// Minimum execution time: 18_138 nanoseconds.
		Weight::from_ref_time(18_218_174 as u64)
			// Standard Error: 10_016
			.saturating_add(Weight::from_ref_time(587_440 as u64).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Identity Registrars (r:1 w:1)
	/// The range of component `r` is `[1, 7]`.
	fn set_account_id(r: u32, ) -> Weight {
		// Minimum execution time: 18_250 nanoseconds.
		Weight::from_ref_time(18_600_890 as u64)
			// Standard Error: 9_400
			.saturating_add(Weight::from_ref_time(547_749 as u64).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Identity Registrars (r:1 w:1)
	/// The range of component `r` is `[1, 7]`.
	fn set_fields(r: u32, ) -> Weight {
		// Minimum execution time: 17_927 nanoseconds.
		Weight::from_ref_time(18_224_225 as u64)
			// Standard Error: 11_674
			.saturating_add(Weight::from_ref_time(600_392 as u64).saturating_mul(r as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Identity Registrars (r:1 w:0)
	// Storage: Identity IdentityOf (r:1 w:1)
	/// The range of component `r` is `[1, 7]`.
	/// The range of component `x` is `[0, 32]`.
	fn provide_judgement(r: u32, x: u32, ) -> Weight {
		// Minimum execution time: 51_354 nanoseconds.
		Weight::from_ref_time(51_411_462 as u64)
			// Standard Error: 34_990
			.saturating_add(Weight::from_ref_time(296_969 as u64).saturating_mul(r as u64))
			// Standard Error: 7_047
			.saturating_add(Weight::from_ref_time(1_268_532 as u64).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Identity SubsOf (r:1 w:1)
	// Storage: Identity IdentityOf (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	// Storage: Identity SuperOf (r:0 w:32)
	/// The range of component `r` is `[1, 8]`.
	/// The range of component `s` is `[0, 32]`.
	/// The range of component `x` is `[0, 32]`.
	fn kill_identity(r: u32, s: u32, x: u32, ) -> Weight {
		// Minimum execution time: 99_649 nanoseconds.
		Weight::from_ref_time(90_273_328 as u64)
			// Standard Error: 51_368
			.saturating_add(Weight::from_ref_time(116_013 as u64).saturating_mul(r as u64))
			// Standard Error: 11_788
			.saturating_add(Weight::from_ref_time(2_070_016 as u64).saturating_mul(s as u64))
			// Standard Error: 11_788
			.saturating_add(Weight::from_ref_time(413_900 as u64).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(s as u64)))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SuperOf (r:1 w:1)
	// Storage: Identity SubsOf (r:1 w:1)
	/// The range of component `s` is `[0, 31]`.
	fn add_sub(s: u32, ) -> Weight {
		// Minimum execution time: 62_720 nanoseconds.
		Weight::from_ref_time(69_484_456 as u64)
			// Standard Error: 11_841
			.saturating_add(Weight::from_ref_time(348_863 as u64).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SuperOf (r:1 w:1)
	/// The range of component `s` is `[1, 32]`.
	fn rename_sub(s: u32, ) -> Weight {
		// Minimum execution time: 26_448 nanoseconds.
		Weight::from_ref_time(28_687_180 as u64)
			// Standard Error: 5_526
			.saturating_add(Weight::from_ref_time(181_081 as u64).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Identity IdentityOf (r:1 w:0)
	// Storage: Identity SuperOf (r:1 w:1)
	// Storage: Identity SubsOf (r:1 w:1)
	/// The range of component `s` is `[1, 32]`.
	fn remove_sub(s: u32, ) -> Weight {
		// Minimum execution time: 67_035 nanoseconds.
		Weight::from_ref_time(70_865_227 as u64)
			// Standard Error: 13_487
			.saturating_add(Weight::from_ref_time(356_267 as u64).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Identity SuperOf (r:1 w:1)
	// Storage: Identity SubsOf (r:1 w:1)
	/// The range of component `s` is `[0, 31]`.
	fn quit_sub(s: u32, ) -> Weight {
		// Minimum execution time: 48_059 nanoseconds.
		Weight::from_ref_time(50_854_633 as u64)
			// Standard Error: 7_779
			.saturating_add(Weight::from_ref_time(350_435 as u64).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
}
