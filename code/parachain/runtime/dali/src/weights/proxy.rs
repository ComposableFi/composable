
//! Autogenerated weights for `proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-03, STEPS: `50`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `8934575597cc`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/386hzkyz77l1m76kfsnqr70svvd104hq-composable/bin/composable
// benchmark
// pallet
// --chain=dali-dev
// --execution=wasm
// --wasm-execution=compiled
// --wasm-instantiation-strategy=legacy-instance-reuse
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/dali/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> proxy::WeightInfo for WeightInfo<T> {
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// The range of component `p` is `[1, 3]`.
	fn proxy(p: u32, ) -> Weight {
		// Minimum execution time: 44_345 nanoseconds.
		Weight::from_ref_time(46_188_405 as u64)
			// Standard Error: 90_544
			.saturating_add(Weight::from_ref_time(177_780 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn proxy_announced(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 56_631 nanoseconds.
		Weight::from_ref_time(59_061_211 as u64)
			// Standard Error: 8_615
			.saturating_add(Weight::from_ref_time(421_663 as u64).saturating_mul(a as u64))
			// Standard Error: 106_768
			.saturating_add(Weight::from_ref_time(359_743 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn remove_announcement(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 18_989 nanoseconds.
		Weight::from_ref_time(20_553_713 as u64)
			// Standard Error: 4_048
			.saturating_add(Weight::from_ref_time(389_796 as u64).saturating_mul(a as u64))
			// Standard Error: 50_177
			.saturating_add(Weight::from_ref_time(145_857 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn reject_announcement(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 19_051 nanoseconds.
		Weight::from_ref_time(20_826_379 as u64)
			// Standard Error: 3_633
			.saturating_add(Weight::from_ref_time(384_421 as u64).saturating_mul(a as u64))
			// Standard Error: 45_030
			.saturating_add(Weight::from_ref_time(122_368 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn announce(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 42_368 nanoseconds.
		Weight::from_ref_time(45_158_571 as u64)
			// Standard Error: 5_699
			.saturating_add(Weight::from_ref_time(396_077 as u64).saturating_mul(a as u64))
			// Standard Error: 70_637
			.saturating_add(Weight::from_ref_time(232_892 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn add_proxy(_p: u32, ) -> Weight {
		// Minimum execution time: 35_844 nanoseconds.
		Weight::from_ref_time(37_414_100 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxy(p: u32, ) -> Weight {
		// Minimum execution time: 34_600 nanoseconds.
		Weight::from_ref_time(35_275_186 as u64)
			// Standard Error: 60_375
			.saturating_add(Weight::from_ref_time(963_135 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxies(p: u32, ) -> Weight {
		// Minimum execution time: 17_128 nanoseconds.
		Weight::from_ref_time(17_956_586 as u64)
			// Standard Error: 35_442
			.saturating_add(Weight::from_ref_time(54_672 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn create_pure(_p: u32, ) -> Weight {
		// Minimum execution time: 39_090 nanoseconds.
		Weight::from_ref_time(41_184_454 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[0, 2]`.
	fn kill_pure(p: u32, ) -> Weight {
		// Minimum execution time: 19_157 nanoseconds.
		Weight::from_ref_time(20_104_010 as u64)
			// Standard Error: 32_219
			.saturating_add(Weight::from_ref_time(76_185 as u64).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}
