
//! Autogenerated weights for `proxy`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-14, STEPS: `50`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ddf18ea9c649`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/7as5b27dws6pfhhpjrs68qfvfx2ldcli-composable/bin/composable
// benchmark
// pallet
// --chain=dali-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/dali/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `proxy`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> proxy::WeightInfo for WeightInfo<T> {
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// The range of component `p` is `[1, 3]`.
	fn proxy(_p: u32, ) -> Weight {
		// Minimum execution time: 40_820 nanoseconds.
		Weight::from_ref_time(44_219_606)
			.saturating_add(T::DbWeight::get().reads(2))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	// Storage: CallFilter DisabledCalls (r:1 w:0)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn proxy_announced(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 52_839 nanoseconds.
		Weight::from_ref_time(55_183_011)
			// Standard Error: 12_819
			.saturating_add(Weight::from_ref_time(443_040).saturating_mul(a.into()))
			// Standard Error: 158_873
			.saturating_add(Weight::from_ref_time(310_113).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn remove_announcement(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 17_063 nanoseconds.
		Weight::from_ref_time(19_010_409)
			// Standard Error: 4_826
			.saturating_add(Weight::from_ref_time(370_624).saturating_mul(a.into()))
			// Standard Error: 59_819
			.saturating_add(Weight::from_ref_time(95_295).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Announcements (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn reject_announcement(a: u32, _p: u32, ) -> Weight {
		// Minimum execution time: 17_094 nanoseconds.
		Weight::from_ref_time(19_369_316)
			// Standard Error: 5_771
			.saturating_add(Weight::from_ref_time(370_209).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Proxies (r:1 w:0)
	// Storage: Proxy Announcements (r:1 w:1)
	/// The range of component `a` is `[0, 31]`.
	/// The range of component `p` is `[1, 3]`.
	fn announce(a: u32, p: u32, ) -> Weight {
		// Minimum execution time: 39_688 nanoseconds.
		Weight::from_ref_time(42_636_024)
			// Standard Error: 8_091
			.saturating_add(Weight::from_ref_time(387_680).saturating_mul(a.into()))
			// Standard Error: 100_283
			.saturating_add(Weight::from_ref_time(105_019).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn add_proxy(p: u32, ) -> Weight {
		// Minimum execution time: 32_794 nanoseconds.
		Weight::from_ref_time(33_866_812)
			// Standard Error: 77_360
			.saturating_add(Weight::from_ref_time(543_412).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxy(p: u32, ) -> Weight {
		// Minimum execution time: 31_814 nanoseconds.
		Weight::from_ref_time(32_737_459)
			// Standard Error: 70_759
			.saturating_add(Weight::from_ref_time(784_544).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn remove_proxies(p: u32, ) -> Weight {
		// Minimum execution time: 15_547 nanoseconds.
		Weight::from_ref_time(16_573_301)
			// Standard Error: 46_610
			.saturating_add(Weight::from_ref_time(33_359).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[1, 3]`.
	fn create_pure(p: u32, ) -> Weight {
		// Minimum execution time: 36_422 nanoseconds.
		Weight::from_ref_time(37_967_901)
			// Standard Error: 81_277
			.saturating_add(Weight::from_ref_time(230_655).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Proxy Proxies (r:1 w:1)
	/// The range of component `p` is `[0, 2]`.
	fn kill_pure(_p: u32, ) -> Weight {
		// Minimum execution time: 17_466 nanoseconds.
		Weight::from_ref_time(18_611_882)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
