
//! Autogenerated weights for `dex_router`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-01-18, STEPS: `50`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `7066db519b2a`, CPU: `Intel(R) Xeon(R) CPU @ 3.10GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// /nix/store/a8zw7i97gjsaanq9c839pbaklnsjsqcf-composable/bin/composable
// benchmark
// pallet
// --chain=dali-dev
// --execution=wasm
// --wasm-execution=compiled
// --wasm-instantiation-strategy=legacy-instance-reuse
// --pallet=*
// --extrinsic=*
// --steps=50
// --repeat=10
// --output=code/parachain/runtime/dali/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `dex_router`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> dex_router::WeightInfo for WeightInfo<T> {
	// Storage: Pablo Pools (r:4 w:0)
	// Storage: DexRouter DexRoutes (r:2 w:1)
	fn update_route() -> Weight {
		Weight::from_ref_time(73_704_000 as u64)
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: DexRouter DexRoutes (r:2 w:0)
	// Storage: Pablo Pools (r:4 w:0)
	// Storage: Tokens Accounts (r:13 w:13)
	// Storage: System Account (r:4 w:0)
	// Storage: Pablo PriceCumulativeState (r:4 w:4)
	fn swap() -> Weight {
		Weight::from_ref_time(402_864_000 as u64)
			.saturating_add(T::DbWeight::get().reads(27 as u64))
			.saturating_add(T::DbWeight::get().writes(17 as u64))
	}
	// Storage: DexRouter DexRoutes (r:1 w:0)
	// Storage: Pablo Pools (r:4 w:0)
	// Storage: Tokens Accounts (r:13 w:13)
	// Storage: System Account (r:4 w:0)
	// Storage: Pablo PriceCumulativeState (r:4 w:4)
	fn buy() -> Weight {
		Weight::from_ref_time(444_442_000 as u64)
			.saturating_add(T::DbWeight::get().reads(26 as u64))
			.saturating_add(T::DbWeight::get().writes(17 as u64))
	}
	// Storage: DexRouter DexRoutes (r:1 w:0)
	// Storage: Pablo Pools (r:1 w:0)
	// Storage: Tokens Accounts (r:5 w:5)
	// Storage: Tokens TotalIssuance (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Pablo PriceCumulativeState (r:1 w:1)
	fn add_liquidity() -> Weight {
		Weight::from_ref_time(227_170_000 as u64)
			.saturating_add(T::DbWeight::get().reads(10 as u64))
			.saturating_add(T::DbWeight::get().writes(8 as u64))
	}
	// Storage: DexRouter DexRoutes (r:1 w:0)
	// Storage: Pablo Pools (r:1 w:0)
	// Storage: Tokens TotalIssuance (r:1 w:1)
	// Storage: Tokens Accounts (r:3 w:1)
	// Storage: Pablo PriceCumulativeState (r:1 w:1)
	fn remove_liquidity() -> Weight {
		Weight::from_ref_time(113_130_000 as u64)
			.saturating_add(T::DbWeight::get().reads(7 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
}
