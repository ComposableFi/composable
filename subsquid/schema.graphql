type Account @entity {
  "Account address"
  id: ID!
  balance: BigInt!
  historicalBalances: [HistoricalBalance!] @derivedFrom(field: "account")
}

type HistoricalBalance @entity {
  id: ID!
  account: Account!
  balance: BigInt!
  date: DateTime!
}

enum PabloTransactionType {
  ADD_LIQUIDITY,
  REMOVE_LIQUIDITY,
  SWAP,
  CREATE_POOL,
  DELETE_POOL
}

type PabloTransaction @entity {
  "ID of the event that was used to derive this transaction"
  eventId: ID!
  pool: PabloPool!
  who: String!
  transactionType: PabloTransactionType
  baseAssetId: BigInt!
  baseAssetAmount: BigInt!
  quoteAssetId: BigInt!
  quoteAssetAmount: BigInt!
  blockNumber: BigInt!
  spotPrice: String!
  "Optional: Only certain transaction types have fees charged by Pablo. Does NOT include the collected extrinsic execution fee."
  fee: String!
  "Unix timestamp in ms"
  receivedTimestamp: BigInt!
}

type PabloPool @entity {
  "ID of the last event that was used to derive this entity data"
  eventId: ID!
  "Pool ID"
  poolId: BigInt!
  owner: String!
  transactionCount: Int!
  totalLiquidity: String!
  totalVolume: String!
  totalFees: String!
  "Asset used for all quotes in this type"
  quoteAssetId: BigInt!
  blockNumber: BigInt!
  "Unix timestamp in ms"
  calculatedTimestamp: BigInt!
  poolAssets: [PabloPoolAsset!] @derivedFrom(field: "pool")
  transactions: [PabloTransaction!] @derivedFrom(field: "pool")
}

type PabloPoolAsset @entity {
  id: ID!
  assetId: BigInt!
  pool: PabloPool!
  totalLiquidity: BigInt!
  totalVolume: BigInt!
  blockNumber: BigInt!
  "Unix timestamp in ms"
  calculatedTimestamp: BigInt!
}

type BondedFinanceBondOffer @entity {
  id: ID!
  eventId: String!
  offerId: String!
  "Total amount of purchased bonds"
  totalPurchased: BigInt!
  "Beneficiary account for the bond offer"
  beneficiary: String!
}

type ScheduleWindow {
  start: BigInt!
  period: BigInt!
  kind: String!
}

type Schedule {
  window: ScheduleWindow!
  periodCount: BigInt!
  perPeriod:BigInt!
}

type VestingSchedule @entity {
  id: ID!
  "account that initiates the schedule"
  from: String!
  "chain event ID"
  eventId: String!
  "{accoundId}-{assetId}"
  scheduleId: String!
  "'To' account for the vesting schedule"
  to: String!
  "Vesting schedule"
  schedule: Schedule!
}