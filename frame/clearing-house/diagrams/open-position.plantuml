@startuml open_position
!theme mars
skinparam responseMessageBelowArrow true

title Opening a Position

actor "Trader" as user
participant "Clearing\nHouse" as ch
participant "vAMM" as vamm
participant "Risk\nEngine" as risk
database "Markets" as mkts
database "Positions" as positions
database "AccountsMargin" as accs
collections "Collateral\naccount" as vault
collections "Fees\naccount" as fees

user -> ch : open position

== Storage updates ==

ch -> mkts : get ""Market""
ch -> positions : get/create position
'note right CH: compute quote asset\nnotional amount

group settle funding payments?
ch -> accs : update collateral
end

note right ch
round trade if it nearly
closes the position
end note
ch -> vamm ++ : swap quote for base asset
return base asset amount

ch -> positions : update position
ch -> mkts : update open interest


opt decreased/reversed position
ch -> accs : update user collateral
end

group charge fee
ch -> accs : subtract fee from user's collateral
end

note right ch
update funding rate?
end note

== Validity checks ==

note right ch
block trade if it's risk
increasing and pushes
the mark price far from
the oracle?
end note

'RiskEngine
ch -> risk ++: ""above_initial_margin_ratio""
    risk -> risk ++: compute\nmargin ratio
        risk -> accs : get margin
        risk -> positions : get all user positions
        risk -> mkts : get all markets\ninvested
        risk -> vamm : get prices
    return
return ""meets_imr""

note right ch
allow ""!meets_imr"" if trade
is risk decreasing?
end note

== Asset transfers ==

group charge fee
ch -> vault : transfer to Fee Pool
vault -> fees : quote asset
end

====

?<-o ch : emit event
@enduml
