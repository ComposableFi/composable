@startuml clearing-house

<style>
.struct {
    BackgroundColor LightGreen
}
.Call {
    BackgroundColor LightBlue
}
.trait {
    BackgroundColor Cyan
}
</style>

package "pallet-clearing-house" {
    interface ClearingHouse <<Call>> {
        + ""open_position()""
        + ""close_position()""
        + ""add_margin()""
        + ""remove_margin()""
        + ""liquidate()""
        + ""update_funding()""
        # ""create_market()""
        # ""close_market()""
    }

    interface "ClearingHouse" as CH <<trait>> {
        ~ ""add_margin()""
        ~ ""remove_margin()""
        ~ ""open_position()""
        ~ ""close_position()""
        ~ ""liquidate()""
        ~ ""create_market()""
        ~ ""close_market()""
        ~ ""update_funding()""
    }
    
    interface "RiskEngine" as RETrait <<trait>> {
        ~ ""get_margin_ratio(AccountId)""
        ~ ""above_initial_margin_ratio(AccountId)""
        ~ ""above_maintenance_margin_ratio(AccountId)""
        ~ ""risk_free_collateral(AccountId)""
        '~ get_free_collateral()
    }
    
    interface "Instruments" as ITrait <<trait>> {
        ~ ""unrealized_funding(Position)""
        ~ ""funding_rate(MarketId)""
    }

    interface "FeeModel" as FTrait <<trait>> {
        ~ ""fee_for_trade()""
    }

    database "Clearing House Storage" {
        map "Collateral" as MarginAccounts <<StorageMap>> {
            AccountId => Balance collateral
        }

        map Positions <<StorageMap>> {
            AccountId => BoundedVec<Position, _> positions
        }

        map Markets <<StorageMap>> {
            MarketId =>
        }

        class Position <<struct>> {
            MarketId market_id
            Decimal base_asset_amount
            Decimal quote_asset_notional_amount
            Decimal last_cum_funding
        }

        class Market <<struct>> {
            AssetId asset_id
            VammId vamm_id
            Decimal margin_ratio_initial
            Decimal margin_ratio_maintenance
            Decimal margin_ratio_partial
            Decimal minimum_trade_size
            Duration funding_frequency
            Duration funding_period
            Balance taker_fee
            Decimal base_asset_amount_long
            Decimal base_asset_amount_short
            Decimal cum_funding_rate_long
            Decimal cum_funding_rate_short
            Balance fee_pool
            Duration funding_rate_ts
        }
    }
}

package "pallet-virtual-amm" {
    interface "Vamm" as vAmm <<trait>> {
        ~ ""create(config: VammConfig)""
        ~ ""close(vamm: VammId, when: Timestamp)""
        ~ ""get_price(vamm: VammId, asset: VammAsset)""
        ~ ""get_twap(vamm: VammId)""
        ~ ""swap(config: SwapConfig)""
        ~ ""swap_simulation(config: SwapConfig)""
        ~ ""move_price(vamm: VammId, base_asset_amount: u128, quote_asset_amount: u128)""
        ~ ""move_to_price(vamm: VammId, target_price: u128)""
    }
}

package "pallet-oracle" {
    interface Oracle <<trait>> {
        ~ ""get_price(asset_id: AssetId, amount: Balance)""
        ~ ""get_twap(of: AssetId, weighting: Vec<Balance>)""
    }
}

hide empty members
hide circle

'================== Storage relationships
Markets ..down> Market : maps
Market::vamm_id ..> vAmm : used in
Market::asset_id ..> Oracle : used in

Positions::positions ..down> Position: contains
Position ..right> Markets : references

'================== Control flow relationships             
ClearingHouse -> CH : wraps

CH -[#blue]-> ITrait : calls

'add_margin
'remove_margin
CH -[#red]-> MarginAccounts : write

'create_market
'close_market
CH -[#red]-> Markets : write

'remove_margin
CH -[#blue]-> RETrait : calls

'open_position
'close_position
'liquidate
CH -[#red]-> Positions : write
CH -[#blue]right> FTrait : calls

'open_position
'close_position
CH -[#blue]-> vAmm : calls

'update_funding
ITrait -[#green]-> Markets : read
ITrait -[#blue]-> Oracle : calls
ITrait -[#blue]-> vAmm : calls

'get_margin_ratio
RETrait -[#green]-> MarginAccounts : read
RETrait -[#green]-> Positions : read
RETrait -left[#blue]> ITrait : calls
RETrait -[#blue]-> vAmm : calls

@enduml
