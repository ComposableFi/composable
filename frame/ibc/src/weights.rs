
//! Autogenerated weights for `pallet_ibc`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-25, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/composable
// benchmark
// --chain
// dali-dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet-ibc
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --json
// --output
// ./frame/ibc/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_ibc`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> crate::weight::WeightInfo for WeightInfo<T> {
	// Storage: Ibc CounterForClients (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Ibc Clients (r:1 w:1)
	// Storage: Ibc ClientUpdateTime (r:0 w:1)
	// Storage: Ibc ClientUpdateHeight (r:0 w:1)
	// Storage: Ibc ConsensusStates (r:0 w:1)
	// Storage: Ibc ClientStates (r:0 w:1)
	fn create_tendermint_client() -> Weight {
		(39_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: Ibc Clients (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:1)
	// Storage: Ibc ConsensusStates (r:3 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Ibc ClientUpdateTime (r:0 w:1)
	// Storage: Ibc ClientUpdateHeight (r:0 w:1)
	fn update_tendermint_client() -> Weight {
		(498_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc CounterForConnections (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:1)
	// Storage: Ibc ConnectionClient (r:1 w:1)
	fn connection_open_init() -> Weight {
		(36_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: System BlockHash (r:2 w:0)
	// Storage: Ibc Connections (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	fn conn_try_open_tendermint() -> Weight {
		(165_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: System BlockHash (r:2 w:0)
	// Storage: Ibc Connections (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	fn conn_open_ack_tendermint() -> Weight {
		(183_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ibc Connections (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	fn conn_open_confirm_tendermint() -> Weight {
		(75_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ibc Capabilities (r:1 w:0)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ChannelCounter (r:1 w:1)
	// Storage: Ibc ChannelsConnection (r:1 w:1)
	// Storage: Ibc NextSequenceAck (r:0 w:1)
	// Storage: Ibc NextSequenceSend (r:0 w:1)
	// Storage: Ibc Channels (r:0 w:1)
	// Storage: Ibc NextSequenceRecv (r:0 w:1)
	fn channel_open_init() -> Weight {
		(49_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: Ibc Capabilities (r:1 w:0)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	fn channel_open_try_tendermint() -> Weight {
		(93_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ibc Capabilities (r:1 w:0)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: IbcPing Channels (r:1 w:1)
	fn channel_open_ack_tendermint() -> Weight {
		(103_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Ibc Capabilities (r:1 w:0)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: IbcPing Channels (r:1 w:1)
	fn channel_open_confirm_tendermint() -> Weight {
		(98_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Ibc Capabilities (r:1 w:0)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: IbcPing Channels (r:1 w:1)
	fn channel_close_init() -> Weight {
		(40_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Ibc Capabilities (r:1 w:0)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: IbcPing Channels (r:1 w:1)
	fn channel_close_confirm_tendermint() -> Weight {
		(94_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Ibc Capabilities (r:1 w:0)
	// Storage: Ibc Channels (r:1 w:0)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Ibc ClientUpdateTime (r:1 w:0)
	// Storage: Ibc ClientUpdateHeight (r:1 w:0)
	// Storage: Ibc PacketReceipt (r:1 w:1)
	fn recv_packet_tendermint(i: u32, ) -> Weight {
		(113_828_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((119_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ibc Capabilities (r:1 w:0)
	// Storage: Ibc Channels (r:1 w:0)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc PacketCommitment (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Ibc ClientUpdateTime (r:1 w:0)
	// Storage: Ibc ClientUpdateHeight (r:1 w:0)
	fn ack_packet_tendermint(i: u32, j: u32, ) -> Weight {
		(124_544_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((97_000 as Weight).saturating_mul(i as Weight))
			// Standard Error: 2_000
			.saturating_add((60_000 as Weight).saturating_mul(j as Weight))
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ibc Capabilities (r:1 w:0)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Ibc PacketCommitment (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Ibc ClientUpdateTime (r:1 w:0)
	// Storage: Ibc ClientUpdateHeight (r:1 w:0)
	fn timeout_packet_tendermint(i: u32, ) -> Weight {
		(123_969_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((108_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Ibc Connections (r:1000 w:0)
	// Storage: Ibc Channels (r:1000 w:0)
	// Storage: Ibc NextSequenceSend (r:999 w:0)
	// Storage: Ibc NextSequenceRecv (r:999 w:0)
	// Storage: Ibc NextSequenceAck (r:999 w:0)
	// Storage: Ibc PacketCommitment (r:1000 w:0)
	// Storage: Ibc Acknowledgements (r:1000 w:0)
	// Storage: Ibc PacketReceipt (r:1000 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Ibc CommitmentRoot (r:1 w:1)
	// Storage: System Digest (r:1 w:1)
	// Storage: Ibc Clients (r:49 w:0)
	fn on_finalize(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 308_000
			.saturating_add((26_858_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 308_000
			.saturating_add((8_135_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 308_000
			.saturating_add((21_904_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 308_000
			.saturating_add((11_217_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 308_000
			.saturating_add((12_298_000 as Weight).saturating_mul(e as Weight))
			// Standard Error: 308_000
			.saturating_add((11_000_000 as Weight).saturating_mul(f as Weight))
			.saturating_add(T::DbWeight::get().reads((3 as Weight).saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(b as Weight)))
			.saturating_add(T::DbWeight::get().reads((4 as Weight).saturating_mul(c as Weight)))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(d as Weight)))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(e as Weight)))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(f as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}

