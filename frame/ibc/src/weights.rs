
//! Autogenerated weights for `pallet_ibc`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-05-27, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dali-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/composable
// benchmark
// pallet
// --chain
// dali-dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet-ibc
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// ./frame/ibc/src/weights

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_ibc`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> crate::WeightInfo for WeightInfo<T> {
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc CounterForClients (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: Ibc Clients (r:1 w:1)
	// Storage: Ibc ClientUpdateTime (r:0 w:1)
	// Storage: Ibc ClientUpdateHeight (r:0 w:1)
	// Storage: Ibc ConsensusStates (r:0 w:1)
	// Storage: Ibc ClientStates (r:0 w:1)
	fn create_tendermint_client() -> Weight {
		(44_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Clients (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:1)
	// Storage: Ibc ConsensusStates (r:3 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: Ibc ClientUpdateTime (r:0 w:1)
	// Storage: Ibc ClientUpdateHeight (r:0 w:1)
	fn update_tendermint_client() -> Weight {
		(509_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc CounterForConnections (r:1 w:1)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: Ibc Connections (r:1 w:1)
	// Storage: Ibc ConnectionClient (r:1 w:1)
	fn connection_open_init() -> Weight {
		(39_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: System BlockHash (r:2 w:0)
	// Storage: Ibc Connections (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Ibc CommitmentRoot (r:1 w:0)
	fn conn_try_open_tendermint() -> Weight {
		(191_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: System BlockHash (r:2 w:0)
	// Storage: Ibc Connections (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Ibc CommitmentRoot (r:1 w:0)
	fn conn_open_ack_tendermint() -> Weight {
		(187_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	fn conn_open_confirm_tendermint() -> Weight {
		(81_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ChannelCounter (r:1 w:1)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: Ibc ChannelsConnection (r:1 w:1)
	// Storage: Ibc NextSequenceAck (r:0 w:1)
	// Storage: Ibc NextSequenceSend (r:0 w:1)
	// Storage: Ibc Channels (r:0 w:1)
	// Storage: Ibc NextSequenceRecv (r:0 w:1)
	fn channel_open_init() -> Weight {
		(41_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	fn channel_open_try_tendermint() -> Weight {
		(90_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	fn channel_open_ack_tendermint() -> Weight {
		(87_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	fn channel_open_confirm_tendermint() -> Weight {
		(89_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	fn channel_close_init() -> Weight {
		(35_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	fn channel_close_confirm_tendermint() -> Weight {
		(89_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Channels (r:1 w:0)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Ibc ClientUpdateTime (r:1 w:0)
	// Storage: Ibc ClientUpdateHeight (r:1 w:0)
	// Storage: Ibc PacketReceipt (r:1 w:1)
	// Storage: Ibc CounterForPacketReceipt (r:1 w:1)
	fn recv_packet_tendermint(i: u32, ) -> Weight {
		(110_963_000 as Weight)
			// Standard Error: 0
			.saturating_add((54_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Channels (r:1 w:0)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc PacketCommitment (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: Ibc ClientUpdateTime (r:1 w:0)
	// Storage: Ibc ClientUpdateHeight (r:1 w:0)
	// Storage: Ibc CounterForPacketCommitment (r:1 w:1)
	fn ack_packet_tendermint(i: u32, j: u32, ) -> Weight {
		(112_515_000 as Weight)
			// Standard Error: 0
			.saturating_add((52_000 as Weight).saturating_mul(i as Weight))
			// Standard Error: 0
			.saturating_add((51_000 as Weight).saturating_mul(j as Weight))
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: unknown [0x3a7472616e73616374696f6e5f6c6576656c3a] (r:1 w:1)
	// Storage: Ibc Channels (r:1 w:1)
	// Storage: Ibc Connections (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Ibc PacketCommitment (r:1 w:1)
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Storage: Ibc ClientUpdateTime (r:1 w:0)
	// Storage: Ibc ClientUpdateHeight (r:1 w:0)
	// Storage: Ibc CounterForPacketCommitment (r:1 w:1)
	fn timeout_packet_tendermint(i: u32, ) -> Weight {
		(115_817_000 as Weight)
			// Standard Error: 0
			.saturating_add((55_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Ibc ClientStates (r:1 w:0)
	// Storage: Ibc ConsensusStates (r:1 w:0)
	// Storage: Ibc Connections (r:50 w:0)
	// Storage: Ibc Channels (r:50 w:0)
	// Storage: Ibc NextSequenceSend (r:49 w:0)
	// Storage: Ibc NextSequenceRecv (r:49 w:0)
	// Storage: Ibc NextSequenceAck (r:49 w:0)
	// Storage: Ibc PacketCommitment (r:50 w:0)
	// Storage: Ibc Acknowledgements (r:50 w:0)
	// Storage: Ibc PacketReceipt (r:50 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: Ibc CommitmentRoot (r:1 w:1)
	// Storage: System Digest (r:1 w:1)
	// Storage: Ibc Clients (r:1 w:0)
	fn on_finalize(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 72_000
			.saturating_add((23_534_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 72_000
			.saturating_add((7_940_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 72_000
			.saturating_add((20_913_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 72_000
			.saturating_add((8_863_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 72_000
			.saturating_add((9_568_000 as Weight).saturating_mul(e as Weight))
			// Standard Error: 72_000
			.saturating_add((8_535_000 as Weight).saturating_mul(f as Weight))
			.saturating_add(T::DbWeight::get().reads((3 as Weight).saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(b as Weight)))
			.saturating_add(T::DbWeight::get().reads((4 as Weight).saturating_mul(c as Weight)))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(d as Weight)))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(e as Weight)))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(f as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
