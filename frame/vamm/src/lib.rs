//! # VAMM Pallet
//!
//! ## Overview
//!
//! ![](http://www.plantuml.com/plantuml/svg/NSqz2W91343XtbFe0TpqLWk2zyXcuyv09XdoWzTNB2oi7b_rraZqh26dIrUIshbSpYrpnWt0yRKSFLjj5Unacgova0susvWMk0a_Ej0Fm46D7PwEWu64qRiUrsOL_roce7xFA-l-wHi0)
//!
//! TODO
//!
//! ### Terminology
//!
//! * **VAAM**: Acronym for Virtual Automated Market Maker. (TODO: expand definition)
//!
//! TODO
//!
//! ### Goals
//!
//! TODO
//!
//! ### Actors
//!
//! TODO
//!
//! (clearing house)
//!
//! ### Implementations
//!
//! TODO
//!
//! ## Interface
//!
//! TODO
//!
//! ### Extrinsics
//!
//! TODO
//!
//! not applicable
//!
//! ### Implemented Functions
//!
//! * **`create()`**
//!
//! TODO
//!
//! ### Public Functions
//!
//! TODO
//!
//! ### Public Storage Objects
//!
//! TODO
//!
//! ## Usage
//!
//! TODO
//!
//! ### Example
//!
//! TODO
//!
//! ## Related Modules
//!
//! TODO
//!
//! (clearing house)
//!
//! <!-- Original author: @Cardosaum -->

#[frame_support::pallet]
pub mod pallet {
	// ----------------------------------------------------------------------------------------------------
	//                                       Imports and Dependencies
	// ----------------------------------------------------------------------------------------------------

	use frame_support::pallet_prelude::*;
	// use frame_system::{ensure_signed, pallet_prelude::*};

	// ----------------------------------------------------------------------------------------------------
	//                                    Declaration Of The Pallet Type
	// ----------------------------------------------------------------------------------------------------

	#[pallet::pallet]
	#[pallet::generate_store(pub(super) trait Store)]
	pub struct Pallet<T>(_);

	// ----------------------------------------------------------------------------------------------------
	//                                             Config Trait
	// ----------------------------------------------------------------------------------------------------

	// Configure the pallet by specifying the parameters and types on which it depends.
	#[pallet::config]
	pub trait Config: frame_system::Config {
		#[allow(missing_docs)]
		type Event: From<Event<Self>> + IsType<<Self as frame_system::Config>::Event>;
	}

	// ----------------------------------------------------------------------------------------------------
	//                                             Pallet Types
	// ----------------------------------------------------------------------------------------------------

	// ----------------------------------------------------------------------------------------------------
	//                                            Runtime Events
	// ----------------------------------------------------------------------------------------------------

	#[pallet::event]
	pub enum Event<T: Config> {}

	// ----------------------------------------------------------------------------------------------------
	//                                           Runtime  Errors
	// ----------------------------------------------------------------------------------------------------

	#[pallet::error]
	pub enum Error<T> {}

	// ----------------------------------------------------------------------------------------------------
	//                                           Runtime  Storage
	// ----------------------------------------------------------------------------------------------------

	// ----------------------------------------------------------------------------------------------------
	//                                                Hooks
	// ----------------------------------------------------------------------------------------------------

	#[pallet::hooks]
	impl<T: Config> Hooks<T::BlockNumber> for Pallet<T> {}

	// ----------------------------------------------------------------------------------------------------
	//                                              Extrinsics
	// ----------------------------------------------------------------------------------------------------
}

// ----------------------------------------------------------------------------------------------------
//                                              Unit Tests
// ----------------------------------------------------------------------------------------------------

#[cfg(test)]
mod tests {}
