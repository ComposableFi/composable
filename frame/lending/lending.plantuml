@startuml
box Composable #LightYellow
  actor Alice as a
  actor Bob as b
  participant Lending as pl
  participant Liquidation as pk
  participant Vault as v
  participant Auction as pa
  control "Assets" as c_assets
  participant Oracle as po
  participant Governance as pg
  participant "AMM/OB DEX" as pd
  control "OCW Auction" as oa
  control "OCW Lending" as cl
  control "OCW Liqudation" as ck
  control "OCW Oracle" as co
end box

box HydraDx #SkyBlue
  participant "DEX" as pd2
  participant "Assets" as p_assets2
  participant "Auction" as pa2
end box

group Positive Governance
  alt #SkyBlue DEX Parachaing
    c_assets --> p_assets2: Settle mapping of assets identifiers
    co --> pd2: Is pair supported? (for each asset in Composable)
    ...
    cl ->  po: Set if external dex suppors price pair
  end
  a   ->    pl: Create market pair for assets ids (tokens, symbols)
  pl  ->    v: Check assets are supported and create vault for collateral
  pl  ->    pl: Set liquidating ParaId for market if any
  pl  ->    po: Check assets pairs are supported (on parachain if set)
  ...
  pg  ->    v : Allocate to Lending
  pl  ->    v : Withdraw Borrowed Asset (liquidity for protocol)
end

...


group Borrow
  b -> v  : transfer collateral
  v -> b  : transfer cCollateral(wrapped token)
  b -> pl : Deposit cCollateral
  ...
  b -> pl : Borrow (collateralized)
  ...
  cl -> pl : accrue interest
  ...
  b -> pl : repay borrow + interest

end

...

group Liqudaiton (IN PROGRESS)

  b  -> pl: Borrow
  co -> pl: Make mCollaral bad ratio
  pl -> pk: Liqudate


  alt #SkyBlue Liqudate via HydraDx
    ck --> pa2 : Transfer and sell on auction
    ...
    pa2 -> pd2 : Sell on dex
    ...
    pa2 --> pl :  Transfer borrow after sell
  else #LightCyan Local liquidation (in case no preferred liqudator)
    cl    -> pl : Liquidate collateral
    pl    -> pk: Liquidate
    pk -> pa: Dutch Auction sell Collateral
    pa    -->  pd: Sell
    ...
    a    -> v : Transfer tokens via bridges
    a    -> pd: Buy
    ...
    oa    -> pa : Finalize auction
  end


end

@enduml
