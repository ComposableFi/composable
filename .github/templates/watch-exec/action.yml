name: watch-exec
description: Calls commands within a cachix watch-exec wrapper.

inputs:
  command:
    description: "The shell command to execute within a watch-exec context"
    required: true
  token:
    description: "Cachix auth token"
    required: true
  skipPush:
    description: "Skip pushing to caching"
    required: false
    default: "true"
  nix-env:
    description: "Additional packages to load in the shell through nix-env"
    required: false
  pre-run:
    description: "Commands to pre-run before executing the watch-exec"
    required: false
  working-directory: 
    description: "Directory to execute command"
    required: false
  nix-sandbox: 
    description: "nix option sandbox value"
    required: false
    default: "relaxed"

runs:
  using: "composite"
  steps:
    - run: |
        echo "experimental-features = nix-command flakes" > /etc/nix/nix.conf
        echo "sandbox = ${{ inputs.nix-sandbox }}" >> /etc/nix/nix.conf
        echo "narinfo-cache-negative-ttl = 0" >> /etc/nix/nix.conf
      shell: "bash"
    - uses: cachix/cachix-action@f5f67badd061acb62b5c6e25e763572ca8317004
      with:
        skipPush: "${{ inputs.skipPush }}"
        installCommand: |
          nix-channel --add ${{ env.NIX_NIXPKGS_CHANNEL }} nixpkgs
          nix-channel --update
          nix-env -iA nixpkgs.cachix ${{ inputs.nix-env }}
        name: ${{  env.CACHIX_COMPOSABLE }}
        authToken: "${{ inputs.token }}"
    - run: |
        ${{ inputs.pre-run }}
        cachix watch-exec --jobs 16 --compression-level $CACHIX_COMPRESSION_LEVEL composable-community ${{ inputs.command }} --no-update-lock-file --show-trace -L
      shell: "bash"
      working-directory: ${{ inputs.working-directory }}