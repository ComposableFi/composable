name: "Build Artifacts"

on:
  workflow_dispatch:
  push: 
    tags: 
      - '*'
      
env:
  DOCKER_USER_OPTION: '$UID:$GID'
  SCCACHE_GCS_BUCKET: 'composable-build-artefacts'
  RUSTC_WRAPPER: "/home/runner/.cargo/bin/sccache"
  SCCACHE_GCS_RW_MODE: "READ_WRITE"

jobs:
  build-and-publish:
    runs-on: 
        - self-hosted
        - linux
        - x64
        - sre
    strategy: 
      fail-fast: true
    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0
  
    - name: Set env
      run: |
        echo "RELEASE_VERSION=$(git tag --sort=committerdate | grep -E '^v[0-9]' | tail -1 )" >> $GITHUB_ENV
        make version

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: ðŸ”¨ Build and Upload Composable Binary
      working-directory: "./.maintain/"
      id: runtime_release
      run: |
        ./client_release.sh

    - name: Build wasm with srtool
      working-directory: "./.maintain/"
      id: runtime_release
      run: |
        ./runtime_release.sh

    - name: Upload Compressed wasm # TODO only upload wasm that has changed
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}
        file: ./runtime/picasso/target/srtool/release/wbuild/picasso-runtime/picasso_runtime.compact.compressed.wasm
        asset_name: picasso_runtime.compact.compressed.wasm
        tag: ${{ github.ref }}
        overwrite: true

    - name: Upload Binary on Release # TODO Only upload binary if client files have changed
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}
        file: target/release/composable
        asset_name: composable
        tag: ${{ github.ref }}
        overwrite: true
    
    - name: Update Release Note
      run: |
        sed -i '1i # Code ' release.md

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path: release.md
        token: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}


  dali-chacha-client-release:
    needs: [build-and-publish]
    runs-on: 
      - self-hosted
      - linux
      - X64
      - ansible-runner

    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0

    - name: Set env
      run: |
        echo "RELEASE_VERSION=$(git tag --sort=committerdate | grep -E '^v[0-9]' | tail -1 )" >> $GITHUB_ENV

    - name: Run ansible playbook
      working-directory: "./.maintain/playbooks"
      run: |
        ansible-playbook -l _environment_testnet client-upgrade.yml -i gcp.yaml  --user runner -e 'ansible_python_interpreter=/usr/bin/python3'
