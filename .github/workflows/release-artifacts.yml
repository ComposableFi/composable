name: Release Artifacts
on:
  push:
    branches:
      - release-v[0-9].[0-9].[0-9]

env:
  GITHUB_TOKEN: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}
  NIX_NIXPKGS_CHANNEL: https://nixos.org/channels/nixpkgs-22.05-darwin
  CACHIX_COMPOSABLE: composable-community
  CACHIX_COMPRESSION_LEVEL: 4
  DOCKER_REGISTRY_NAME: composablefi
  DOCKER_USER_OPTION: '$UID:$GID'

jobs:
  build-runtime:
    name: "Build runtime"
    runs-on:
      - self-hosted
      - linux
      - x64
      - sre
    concurrency:
      group: build-runtime-${{ matrix.runtime }}-${{ github.ref }}
      cancel-in-progress: true
    container:
      image: niteo/nixpkgs-nixos-22.05:316b762afdb9e142a803f29c49a88b4a47db80ee
    strategy:
      matrix:
        runtime: [dali, picasso, composable]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup nix configuration
        run: |
          echo "experimental-features = nix-command flakes" > /etc/nix/nix.conf
          echo "sandbox = relaxed" >> /etc/nix/nix.conf
          echo "narinfo-cache-negative-ttl = 0" >> /etc/nix/nix.conf

      - name: Setup cachix
        uses: cachix/cachix-action@f5f67badd061acb62b5c6e25e763572ca8317004
        with:
          skipPush: true
          installCommand: |
            nix-channel --add ${{env.NIX_NIXPKGS_CHANNEL }} nixpkgs
            nix-channel --update
            nix-env -iA nixpkgs.cachix
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: composable-community

      - name: Build runtime
        run: |
          cachix watch-exec --compression-level $CACHIX_COMPRESSION_LEVEL $CACHIX_COMPOSABLE nix -- build .#${{ matrix.runtime }}-runtime

  build-composable-node:
    name: "Build Composable node (runtimeless)"
    runs-on:
      - self-hosted
      - linux
      - x64
      - sre
    concurrency:
      group: build-composable-node-${{ github.ref }}
      cancel-in-progress: true
    container:
      image: niteo/nixpkgs-nixos-22.05:316b762afdb9e142a803f29c49a88b4a47db80ee
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup nix configuration
        run: |
          echo "experimental-features = nix-command flakes" > /etc/nix/nix.conf
          echo "sandbox = relaxed" >> /etc/nix/nix.conf
          echo "narinfo-cache-negative-ttl = 0" >> /etc/nix/nix.conf

      - name: Setup cachix
        uses: cachix/cachix-action@f5f67badd061acb62b5c6e25e763572ca8317004
        with:
          skipPush: true
          installCommand: |
            nix-channel --add ${{env.NIX_NIXPKGS_CHANNEL }} nixpkgs
            nix-channel --update
            nix-env -iA nixpkgs.cachix
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: composable-community

      - name: Build Composable node (without runtime)
        run: |
          cachix watch-exec --compression-level $CACHIX_COMPRESSION_LEVEL $CACHIX_COMPOSABLE nix -- build .#composable-node-release

  release:
    name: "Release"
    runs-on:
      - self-hosted
      - linux
      - x64
      - sre
    needs:
      - build-runtime
      - build-composable-node
    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: true
    container:
      image: niteo/nixpkgs-nixos-22.05:316b762afdb9e142a803f29c49a88b4a47db80ee
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Nix configuration
        run: |
          echo "experimental-features = nix-command flakes" > /etc/nix/nix.conf
          echo "sandbox = relaxed" >> /etc/nix/nix.conf
          echo "narinfo-cache-negative-ttl = 0" >> /etc/nix/nix.conf

      - name: Setup Cachix
        uses: cachix/cachix-action@f5f67badd061acb62b5c6e25e763572ca8317004
        with:
          skipPush: true
          installCommand: |
            nix-channel --add ${{env.NIX_NIXPKGS_CHANNEL }} nixpkgs
            nix-channel --update
            nix-env -iA nixpkgs.cachix
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: composable-community

      - name: Install Docker
        run: nix-env -iA nixpkgs.docker

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Download artifacts
        run: |
          nix run .#generate-release-artifacts -L

      - name: Setup Composable version
        run: |
          echo "COMPOSABLE_VERSION=$(nix eval --raw .#composable-node-release.version)" >> $GITHUB_ENV

      - name: Release Docker image
        run: |
          docker load --input release-artifacts/composable-docker-image
          docker tag composable:latest "${{ env.DOCKER_REGISTRY_NAME }}/composable:v${{ env.COMPOSABLE_VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY_NAME }}/composable:v${{ env.COMPOSABLE_VERSION }}"

      - name: Get commit
        id: fetch_commit_sha
        run: |
          if [ ${{ github.event_name == 'pull_request' }} ]; then
            echo "::set-output name=sha::${{ github.event.pull_request.head.sha }}"
          else
            echo "::set-output name=sha::${{ github.sha }}"
          fi

      - name: Release artifacts
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          fail_on_unmatched_files: true
          generate_release_notes: true
          body_path: release-artifacts/release.txt
          tag_name: v${{ env.COMPOSABLE_VERSION }}
          target_commitish: ${{ steps.fetch_commit_sha.outputs.sha }}
          files: |
            release-artifacts/to-upload/*
