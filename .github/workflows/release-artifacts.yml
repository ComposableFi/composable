name: Release Artifacts
on:
  push:
    tags:
      - 'release-v[0-9]+\.[0-9]+\.[0-9]+'

env:
  GITHUB_TOKEN: ${{ secrets.COMPOSABLE_GITHUB_TOKEN }}
  NIX_NIXPKGS_CHANNEL: https://nixos.org/channels/nixpkgs-22.05-darwin
  CACHIX_COMPOSABLE: composable-community
  CACHIX_COMPRESSION_LEVEL: 4
  DOCKER_REGISTRY_NAME: composablefi
  DOCKER_USER_OPTION: '$UID:$GID'

jobs:

  release:
    name: "Release"
    runs-on:
      - self-hosted
      - x64-cute
    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: true
    container:
      image: niteo/nixpkgs-nixos-22.05:316b762afdb9e142a803f29c49a88b4a47db80ee
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Nix configuration
        run: |
          echo "experimental-features = nix-command flakes" > /etc/nix/nix.conf
          echo "sandbox = relaxed" >> /etc/nix/nix.conf
          echo "narinfo-cache-negative-ttl = 0" >> /etc/nix/nix.conf

      - name: Setup Cachix
        uses: cachix/cachix-action@f5f67badd061acb62b5c6e25e763572ca8317004
        with:
          skipPush: true
          installCommand: |
            nix-channel --add ${{env.NIX_NIXPKGS_CHANNEL }}
            nix-channel --update
            nix-env -iA nixpkgs.cachix nixpkgs.docker
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: composable-community

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push docker
        run: |
          nix run .#generate-release-artifacts --print-build-logs
          echo "COMPOSABLE_VERSION=$(nix eval --raw .#composable-node.version)" >> $GITHUB_ENV
          docker load --input release-artifacts/composable-docker-image
          docker tag composable:latest "${{ env.DOCKER_REGISTRY_NAME }}/composable:v${{ env.COMPOSABLE_VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY_NAME }}/composable:v${{ env.COMPOSABLE_VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY_NAME }}/composable:latest"
          
      - name: Release artifacts
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: true          
          fail_on_unmatched_files: true
          generate_release_notes: true          
          body_path: release-artifacts/release.txt
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          target_commitish: ${{ github.sha }}
          files: |
            release-artifacts/to-upload/*
