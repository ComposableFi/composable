name: Deploy Documentation

on:
  push: 
    branches: 
      - main
      - cor/xcvm-architecture-docs
env:
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    container:
        image: niteo/nixpkgs-nixos-22.05:316b762afdb9e142a803f29c49a88b4a47db80ee
    steps:
      - uses: actions/checkout@v3     
      - name: Configure `nix.conf`
        run: |
          echo "experimental-features = nix-command flakes" > /etc/nix/nix.conf
          echo "sandbox = relaxed" >> /etc/nix/nix.conf
          echo "narinfo-cache-negative-ttl = 0" >> /etc/nix/nix.conf
      - uses: cachix/cachix-action@f5f67badd061acb62b5c6e25e763572ca8317004
        with:
          skipPush: true
          installCommand: |
            nix-channel --add ${{ env.NIX_NIXPKGS_CHANNEL }} nixpkgs
            nix-channel --update
            nix-env -iA nixpkgs.cachix
          name: ${{  env.CACHIX_COMPOSABLE }}
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build `docs-static`
        run: |
          cachix watch-exec --jobs 16 --compression-level $CACHIX_COMPRESSION_LEVEL composable-community nix -- build .#docs-static --no-update-lock-file --show-trace -L


      # - name: Run mdbook
      #   run: nix build ".#composable-book"

      # - name: install firebase
      #   run: npm i firebase-tools -g  

      # - name: deploy
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      #   run: cd book && firebase deploy 