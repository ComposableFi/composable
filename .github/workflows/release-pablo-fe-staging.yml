name: "Pablo Vercel Staging Deployment"
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.PABLO_PROD_PROJECT_ID }}
on:
  push:
    tags:
      - 'staging-fe-v[0-9]+\.[0-9]+-pablo-[0-9]+'

jobs:
  Deploy-Staging:
    runs-on:
      - self-hosted
      - linux
      - x64
      - sre
    container:
      image: niteo/nixpkgs-nixos-22.05:316b762afdb9e142a803f29c49a88b4a47db80ee
    steps:
      - run: |
          echo "experimental-features = nix-command flakes" > /etc/nix/nix.conf
          echo "sandbox = relaxed" >> /etc/nix/nix.conf
          echo "narinfo-cache-negative-ttl = 0" >> /etc/nix/nix.conf
        shell: "bash"
      - uses: cachix/cachix-action@f5f67badd061acb62b5c6e25e763572ca8317004
        with:
          installCommand: |
            nix-channel --add ${{ env.NIX_NIXPKGS_CHANNEL }} nixpkgs
            nix-channel --update
            nix-env -iA nixpkgs.cachix nixpkgs.git-lfs nixpkgs.nodejs
          name: ${{ env.CACHIX_COMPOSABLE }}
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Import project setting
        run: |
          mkdir -p .vercel
          echo '${{ secrets.PABLO_PROJ_JSON }}' >> .vercel/project.json
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
