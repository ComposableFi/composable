name: Test & Build & Benchmarking Build

# please update docker, toolchain toml and github action with toolchain at same time
on:
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  check:
    runs-on:
      - self-hosted
      - linux
      - x64
      - sre
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-09-01
          override: true
      - uses: actions-rs/cargo@v1
      - name: Cargo Check
        run: |
          SKIP_WASM_BUILD=1 cargo check
      - name: Cargo Check Benchmark
        run: |
          SKIP_WASM_BUILD=1 cargo check --features=runtime-benchmarks --release
  linters:
    name: Linters
    runs-on:
      - self-hosted
      - linux
      - x64
      - sre
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-09-01
          components: clippy
          override: true
      - name: Cargo fmt
        run: |
          rustup component add rustfmt --toolchain nightly-2021-09-01-x86_64-unknown-linux-gnu
          cargo fmt -- --check
      - name: Hadolint
        env:
          HADOLINT_VERSION: v2.7.0
        run: |
          curl -L -o hadolint "https://github.com/hadolint/hadolint/releases/download/${HADOLINT_VERSION}/hadolint-Linux-x86_64"
          chmod +x hadolint
          ./hadolint --version

          total_exit_code=0
          while IFS= read -r file; do
            echo "=== $file ==="
            ./hadolint --config .hadolint.yaml $file || total_exit_code=$?
            echo ""
          done < <(find . -name "Dockerfile")
          exit $total_exit_code
      - name: Cargo clippy
        run: |
          SKIP_WASM_BUILD=1 cargo clippy -- -D warnings
      - name: Cargo udeps
        env:
          UDEPS_VERSION: v0.1.23
        run: |
          rustup target add wasm32-unknown-unknown
          curl -L -O "https://github.com/est31/cargo-udeps/releases/download/${UDEPS_VERSION}/cargo-udeps-${UDEPS_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          tar xzf "cargo-udeps-${UDEPS_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          cp "cargo-udeps-${UDEPS_VERSION}-x86_64-unknown-linux-gnu/cargo-udeps" ~/.cargo/bin/
          rm -r "cargo-udeps-${UDEPS_VERSION}-x86_64-unknown-linux-gnu.tar.gz" "cargo-udeps-${UDEPS_VERSION}-x86_64-unknown-linux-gnu"
          cargo udeps --version

          total_exit_code=0
          while IFS= read -r crate; do
            echo "=== $crate ==="
            (cd "$crate"; SKIP_WASM_BUILD=1 cargo udeps -q --all-targets) || total_exit_code=$?
            echo ""
          done < <(find . -name "Cargo.toml" -not -path "./polkadot-launch/*" -not -path "./target/*" -exec dirname '{}' \;)
          exit $total_exit_code
  test:
    name: Unit Test
    runs-on:
      - self-hosted
      - linux
      - x64
      - sre
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-09-01
          override: true
      - name: Run Test
        run: |
          SKIP_WASM_BUILD=1 cargo test
          cargo clean -p picasso-runtime
          cargo clean -p composable
