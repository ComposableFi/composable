name: "Dali-chachacha Community Release"

on:
  push: 
    branches: "workflow-to-dali"
    tags: 
      - 'dali-*'

env:
  CHAIN: "dali"

jobs:
  build-and-publish:
    runs-on: 
        - self-hosted
        - linux
        - x64
        - sre
    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0

    - name: Set env
      run: |
        echo "RELEASE_VERSION=$(git tag --sort=committerdate | grep -E '^dali-[0-9]' | tail -1 )" >> $GITHUB_ENV
        make version
    - name: Build and Push Artifacts to gcloud
      run: |
        /home/runner/.cargo/bin/cargo build --release --bins
        tar -czvf composable-${{ env.RELEASE_VERSION }}.tar.gz target/release/composable
        tar -czvf picasso_runtime.compact.wasm-${RELEASE_VERSION}.tar.gz target/release/wbuild/picasso-runtime/picasso_runtime.compact.wasm
        tar -czvf parachain-utils-${RELEASE_VERSION}.tar.gz target/release/parachain-utils
        gsutil cp *.tar.gz gs://composable-binaries/community-releases/dali/ 

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./composable-${{ env.RELEASE_VERSION }}.tar.gz
        asset_name: composable-${{ env.RELEASE_VERSION }}.tar.gz
        asset_content_type: application/x-tar

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}  

    - name: Build Docker image
      run: make containerize-release 
    - name:  Docker push
      run: make push-release
