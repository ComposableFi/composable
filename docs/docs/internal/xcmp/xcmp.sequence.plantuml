@startuml

sibling-asset-transfer.sequence
box Picasso #LightYellow
    participant Pallet as pallet
    participant XTokens as xtokens
    participant XcmExecutor
    participant TransactAsset
    participant Converters
    participant XcmQueue
    participant Assets
end box

box Sibling #LightBlue
    participant "XcmQueue" as sibling_xcm_queue
    participant "XcmExecutor" as sibling_xcm_executor
    participant "Assets" as sibling_assets
end box
pallet -> xtokens: Transfer Local Assets
xtokens -> Converters: pallet to map local tokens to remote
xtokens -> xtokens : Build XCM message depending on remote type
xtokens -> XcmExecutor : Execute
XcmExecutor -> TransactAsset : Withdraw
TransactAsset -> Assets: Withdraw
XcmExecutor -> XcmQueue : Put message
note right
 - Networking layer will ensure that messages appear on another chain
end note
...
sibling_xcm_queue -> sibling_xcm_executor: Receive message
sibling_xcm_executor -> sibling_assets: Dispatch to call relevant pallet for accepting foreign assets

@enduml


@startuml
' pure Cumulus/Polkadot, not ORML flow
"cumulus:DmpMessageHandler"  -> "cumulus:DmpMessageHandler": handle_dmp_messages
"cumulus:DmpMessageHandler"  -> "cumulus:DmpMessageHandler": try_service_message
"cumulus:DmpMessageHandler" -> XcmExecutor: execute_xcm_in_credit
XcmExecutor -> Weigher : weight is computable and under limit
XcmExecutor -> Barrier : should execute
XcmExecutor -> vm : execute
XcmExecutor  -> process_instruction: for each instruction in message 
XcmExecutor -> vm : either accrue weight while there are messages or call error handler
@enduml